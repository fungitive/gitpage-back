{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/upai_logo2.png","path":"images/upai_logo2.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1535771262535},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1535771262535},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1535771262535},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1535771262535},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1535771262535},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1535771262535},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1535771262535},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1535771262535},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1535771262535},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1535771262535},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1535771262535},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1535771262535},{"_id":"themes/next/_config.yml","hash":"e0eb30b3a39bb3b19ec7490decd84988f288a22b","modified":1535796132717},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1535771262535},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1535771262535},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1535771262538},{"_id":"source/_drafts/kubeadm安装Kubernetes1-11集群.md","hash":"82364c6912ad258a492bf021e23653a9cf209dd8","modified":1535794232398},{"_id":"source/_posts/2018-07-10-Python-标准库.md","hash":"f5c76816a8e9162f4a96da2893e9b4a67b9ff97e","modified":1535791394255},{"_id":"source/_posts/2018-07-10-python-test.md","hash":"fafad08c55367c5e3654bd42e2a9b67787a026e0","modified":1535787220130},{"_id":"source/_posts/2018-08-08-docker.md","hash":"fc971fe48ddca1e3a9a8a45e305dcfec1f259fd3","modified":1535770064707},{"_id":"source/_posts/docker.md","hash":"4bf0d2a32cfc25df791c7fb07e58fcd645516176","modified":1535770092468},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1535696949000},{"_id":"source/_posts/kubeadm安装Kubernetes1-11集群-1.md","hash":"564114756166000646e1473504c6b63f8e5f9195","modified":1535794196994},{"_id":"source/about/index.md","hash":"2f1671434fdd0930b9f42a1b07cd9923e32463a7","modified":1535765916311},{"_id":"source/categories/index.md","hash":"eac52b1918f7bfb0a89cdcb2e184ecd4418d3f0d","modified":1535765991050},{"_id":"source/images/upai_logo2.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1490173662000},{"_id":"source/tags/index.md","hash":"49727370ffe8186d81a2464508d632affe8cfd7e","modified":1535724246891},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1535771262531},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1535771262532},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1535771250668},{"_id":"themes/next/.git/index","hash":"3d6ce46ad7d92f4b709dd85099dc5790878b9c8a","modified":1535771262561},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1535771262531},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1535771262535},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1535771262535},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1535771262535},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1535771262535},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1535771262535},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1535771262535},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1535771262535},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1535771262535},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1535771262535},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1535771262535},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1535771262535},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1535771262535},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1535771262535},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1535771262535},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1535771262535},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1535771262535},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1535771262535},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1535771262535},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1535771262535},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1535771262535},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1535771262537},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1535771262538},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1535771262538},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1535771262538},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1535771262538},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1535771262538},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1535771262538},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1535771262538},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1535771262538},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1535771262539},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1535771262561},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1535771262561},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1535771262561},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262543},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1535771250668},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1535771250668},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1535771250668},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1535771250668},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1535771250668},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1535771250668},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1535771250668},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1535771250668},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1535771250668},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1535771250668},{"_id":"themes/next/.git/logs/HEAD","hash":"ead2b76c0bef609a38e2e520ef52937ad49a9630","modified":1535771262532},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535771262537},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1535771262537},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1535771262537},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1535771262537},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1535771262537},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1535771262537},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1535771262537},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1535771262537},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1535771262537},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e4aa90600c84bbbec9cf21044b41807bd1b35abf","modified":1535790671998},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1535771262537},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1535771262537},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1535771262537},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1535771262537},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1535771262537},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1535771262537},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1535771262537},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1535771262537},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1535771262538},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1535771262538},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1535771262538},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1535771262538},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1535771262538},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1535771262538},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1535771262538},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1535771262539},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1535771262539},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1535771262539},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1535771262539},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1535771262539},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1535771262539},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1535771262539},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1535771262539},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1535771262539},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1535771262543},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1535771262543},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535771262543},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535771262543},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1535771262543},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1535771262543},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1535771262543},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1535771262543},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1535771262543},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1535771262544},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1535771262544},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535771262544},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535771262544},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535771262544},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1535771262544},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535771262544},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1535771262544},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1535771262544},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535771262544},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262537},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262537},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262542},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262542},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262542},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262543},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535771262543},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1535771262531},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1535771262537},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1535771262537},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1535771262537},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1535771262537},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1535771262537},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1535771262537},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1535771262537},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1535771262537},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1535771262537},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1535771262537},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535771262537},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1535771262537},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1535771262537},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1535771262537},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1535771262538},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1535771262538},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1535771262538},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1535771262538},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1535771262538},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1535771262538},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1535771262538},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1535771262538},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1535771262538},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1535771262538},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1535771262538},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1535771262538},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1535771262542},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1535771262542},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1535771262542},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1535771262542},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1535771262543},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1535771262543},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1535771262543},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1535771262543},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535771262544},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535771262544},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535771262544},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535771262544},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535771262544},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535771262544},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535771262544},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535771262544},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535771262544},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535771262544},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535771262544},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535771262546},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535771262547},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535771262547},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1535771262548},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1535771262549},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1535771262549},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1535771262549},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1535771262549},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1535771262555},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1535771262556},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1535771262556},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1535771262556},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1535771262556},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535771262556},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535771262556},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535771262556},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535771262556},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535771262556},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535771262557},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535771262557},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535771262557},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535771262557},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535771262557},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1535771262559},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1535771262559},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535771262561},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535771262561},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535771262561},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535771262556},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"ead2b76c0bef609a38e2e520ef52937ad49a9630","modified":1535771262532},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1535771262531},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1535771262538},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1535771262538},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1535771262541},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1535771262542},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1535771262542},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1535771262542},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1535771262542},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1535771262542},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1535771262542},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1535771262543},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1535771262543},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535771262544},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535771262545},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535771262546},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535771262549},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535771262549},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1535771262549},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535771262549},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535771262559},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535771262559},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535771262545},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535771262545},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535771262555},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535771262555},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535771262561},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"ead2b76c0bef609a38e2e520ef52937ad49a9630","modified":1535771262531},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1535771262539},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1535771262541},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1535771262542},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535771262542},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1535771262543},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535771262545},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535771262545},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535771262545},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535771262545},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535771262545},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535771262548},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535771262548},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535771262551},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535771262552},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535771262555},{"_id":"themes/next/.git/objects/pack/pack-a5ad968d9d5c81ccefac492dcb3fd1806591e448.idx","hash":"baccc333989b5a1b1719965c6c3a9891cce61ff6","modified":1535771262483},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535771262547},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535771262559},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1535771262554},{"_id":"themes/next/.git/objects/pack/pack-a5ad968d9d5c81ccefac492dcb3fd1806591e448.pack","hash":"1310fd9358c94811f585a7fa3724d7431f130898","modified":1535771262480},{"_id":"public/search.xml","hash":"0c5db5e78730f8a686913e1263b5a59c82201a17","modified":1535796156636},{"_id":"public/sitemap.xml","hash":"82e7a01f8a48804658ba3275bdf1f5a5bb988743","modified":1535796156642},{"_id":"public/about/index.html","hash":"fccce928ef343ef12b77016db559798447453131","modified":1535796156654},{"_id":"public/categories/index.html","hash":"e4cbfbea89a16d535d68e49a43d4c2c1327edf0b","modified":1535796156654},{"_id":"public/tags/index.html","hash":"4a16aff316e094df86043263efa3c033abddbe62","modified":1535796156654},{"_id":"public/2018-08-31-docker/index.html","hash":"33bb23ab10dec72488ebbb9234d6ad3141c944a2","modified":1535796156654},{"_id":"public/archives/index.html","hash":"58a1efcc83611a8782ff610d4012ab072a420c4e","modified":1535796156654},{"_id":"public/archives/2018/index.html","hash":"b9d84eaa62974d5254bf791a41c4e1afd918d1e3","modified":1535796156654},{"_id":"public/archives/2018/08/index.html","hash":"1f3b0082f7dff55afabd49cead8b09d2fe20ec77","modified":1535796156654},{"_id":"public/archives/2018/09/index.html","hash":"50b1e9228e017bd4f3177ac75c580448b1f35eea","modified":1535796156654},{"_id":"public/categories/python/index.html","hash":"48044bd03cfbc441d4a6fdf6aac26d11cb7d0dad","modified":1535796156654},{"_id":"public/categories/容器云/index.html","hash":"edf10992948f4317279ee77aff6f2037380b33b9","modified":1535796156654},{"_id":"public/tags/python/index.html","hash":"160f80f3b33a5e30f74aebfe793fbc74f6c15cfc","modified":1535796156654},{"_id":"public/tags/docker/index.html","hash":"24bb4d022f9604f294be1e324739eb937ee6e017","modified":1535796156654},{"_id":"public/tags/kubernetes/index.html","hash":"16ea23d9edde88183ac1036e5d5243bcf8bfae08","modified":1535796156654},{"_id":"public/2018-09-01-kubeadm安装Kubernetes1-11集群-1/index.html","hash":"0e140220c5ae416050f928a7e97df4cb9eb3661f","modified":1535796156654},{"_id":"public/2018-08-31-2018-07-10-Python-标准库/index.html","hash":"2fea65dd0ce199baecb6662a1f50810b5646038d","modified":1535796156654},{"_id":"public/2018-08-31-hello-world/index.html","hash":"2a80f7e10d0a9390836f255dcffb720db33a486e","modified":1535796156655},{"_id":"public/2018-08-31-2018-08-08-docker/index.html","hash":"6ff6d36c342ee3638635f63dde02d9abe7b08b37","modified":1535796156655},{"_id":"public/2018-08-31-2018-07-10-python-test/index.html","hash":"571809c026c3ac724e8ea2a8fce96af35826a052","modified":1535796156655},{"_id":"public/index.html","hash":"5c56038800b924ca561a91b37dfd00a3175fee43","modified":1535796156655},{"_id":"public/images/upai_logo2.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1535796156661},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1535796156661},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535796156661},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535796156661},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1535796156661},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1535796156661},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1535796156662},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1535796156662},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1535796156662},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1535796156662},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1535796156662},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535796156662},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535796156662},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535796156662},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1535796156662},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535796156663},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1535796156663},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1535796156663},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535796156663},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1535796156663},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1535796156663},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535796156663},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535796156663},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535796156663},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535796156663},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535796156664},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535796156664},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1535796156664},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535796158132},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535796158134},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535796158138},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535796158138},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535796158138},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535796158138},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"1bcf74674566a61fe954e374a231011239b8e5e9","modified":1535796158138},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535796158153},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535796158154},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535796158156},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535796158156},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535796158156},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535796158156},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535796158156},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535796158156},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535796158156},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535796158157},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535796158157},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535796158157},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1535796158157},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1535796158157},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1535796158157},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1535796158157},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1535796158157},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1535796158157},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535796158157},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535796158158},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535796158159},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535796158159},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535796158159},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535796158159},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1535796158159},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535796158159},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535796158159},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535796158159},{"_id":"public/css/main.css","hash":"5a65c51193a33d527ea3b32d21afadf0807bb66c","modified":1535796158160},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535796158160},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535796158160},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"422f4c3882cf8366927333081292a9bed6000124","modified":1535796158160},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"55eaeaf5ecda250f5bed80958a05bef13886eee6","modified":1535796158160},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535796158166},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535796158168},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535796158168},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535796158168},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535796158168},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535796158168},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535796158168},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535796158169},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535796158169},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535796158169},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535796158169},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535796158169},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535796158169},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535796158169},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535796158169},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535796158169},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535796158176},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535796158178},{"_id":"public/assets/algolia/algoliasearch.js","hash":"f34e955c2112cc6a80b48e48dd240a10817069f9","modified":1535796158179},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535796158184},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535796158184},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535796158196},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535796158196},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535796158197},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535796158198},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535796158198},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535796158198},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535796158199},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535796158209},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535796158209},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535796158210},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535796158215},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535796158241},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535796158242},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1535796158249},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535796158259},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535796158273},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535796158278}],"Category":[{"name":"python","_id":"cjlj9djq70008wnpeisxtujh9"},{"name":"容器云","_id":"cjlj9djr5000dwnpe7jnakfm8"}],"Data":[],"Page":[{"title":"about","date":"2018-08-31T17:38:25.000Z","_content":"关于我们","source":"about/index.md","raw":"title: about\ndate: 2018-09-01 01:38:25\n---\n关于我们","updated":"2018-09-01T01:38:36.311Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjlj9djpq0001wnpeptampq01","content":"<p>关于我们</p>\n","site":{"data":{}},"excerpt":"","more":"<p>关于我们</p>\n"},{"title":"分类","date":"2018-08-31T09:07:04.000Z","_content":"python","source":"categories/index.md","raw":"title: 分类\ndate: 2018-08-31 17:07:04\n---\npython","updated":"2018-09-01T01:39:51.050Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjlj9djpv0003wnpeydv8h94c","content":"<p>python</p>\n","site":{"data":{}},"excerpt":"","more":"<p>python</p>\n"},{"title":"标签","date":"2018-08-31T09:13:41.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-08-31 17:13:41\n---\n","updated":"2018-08-31T14:04:06.891Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjlj9djpz0005wnpe346lw8kv","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"kubeadm安装Kubernetes1.11集群","author":"汪菲宇","date":"2018-09-01T01:25:57.000Z","_content":"","source":"_drafts/kubeadm安装Kubernetes1-11集群.md","raw":"title: kubeadm安装Kubernetes1.11集群\nauthor: 汪菲宇\ndate: 2018-09-01 09:25:57\ntags:\n---\n","slug":"kubeadm安装Kubernetes1-11集群","published":0,"updated":"2018-09-01T09:30:32.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlj9djpe0000wnpe4r7ftsqu","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post","published":1,"title":"Python标准库","date":"2018-08-31T23:38:00.000Z","_content":"Python丰富而强大遍历的标准库是其最突出的优点之一.\n\n这里当然不可能说明所有的标准库, 本文只简单列出一些标准库的使用, 还有一部分在其它博文中说明:\n\n    Python时间系统\n    Python解析xml与JSON\n    requests发送HTTP请求\n    PDB调试Python程序\n    Python日志模块logging\n    Python正则表达式模块re\n    Python虚拟环境virtualenv\n    Python 数据库\n    Python Socket\n    Python WSGI接口\n    使用urllib访问网络资源\n\n操作系统环境os\n\n建议使用 import os 风格而非 from os import *。这样可以保证随操作系统不同而有所变化的 os.open() 不会覆盖内置函数 open()。\n\n在使用 os 这样的大型模块时内置的 dir() 和 help() 函数非常有用。\n命令行参数sys\n\n通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量。\n\nsys 还有 stdin，stdout 和 stderr 属性，即使在 stdout 被重定向时，后者也可以用于显示警告和错误信息。\n\n    >>> sys.stderr.write('Warning, log file not found starting a new one\\n')\n    Warning, log file not found starting a new one\n\n数学math\n数据压缩zlib\n\n以下模块直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile。\n\n    >>> import zlib\n    >>> s = b'witch which has which witches wrist watch'\n    >>> len(s)\n    41\n    >>> t = zlib.compress(s)\n    >>> len(t)\n    37\n    >>> zlib.decompress(t)\n    b'witch which has which witches wrist watch'\n    >>> zlib.crc32(s)\n    226805979\n\n性能测试timeit\n\n    >>> from timeit import Timer\n    >>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit()\n    0.57535828626024577\n    >>> Timer('a,b = b,a', 'a=1; b=2').timeit()\n    0.54962537085770791\n\n文件通配符glob\n\nglob模块提供了一个函数用于从目录通配符搜索中生成文件列表：\n\n    >>> import glob\n    >>> glob.glob('*.py')\n    ['primes.py', 'random.py', 'quote.py']  \n\n高精度小数 decimal\n\ndecmial模块可以提供制定精度的小数运算，使用前需要>>>import decmial。decmial对象由构造函数decmial.Decmial()根据一个int或字符串参数建立。Python3.5中decmial.Decmial()可以根据float建立对象，但那是不精确的。\n\n    >>>decimal.Decimal(1)\n    Decimal('1')\n    >>>decimal.Decimal(\"1.2\")\n    Decimal('1.2')\n\nmath与cmath库中的数学函数对decimal不适用，但decimal自身提供了一系列数学函数。\n\n    >>> x = decimal.Decimal(2)\n    >>> x.exp()\n    Decimal('7.389056098930650227230427461')\n    >>> decimal.Decimal.exp(x)\n    Decimal('7.389056098930650227230427461')\n\n对象序列化pickle\n\nPython的pickle模块实现了基本的数据序列和反序列化。\n序列化：\n​\nimport pickle\npickle.dump(obj, file, [,protocol])\n\n反序列化：\n\nobj = pickle.load(file)","source":"_posts/2018-07-10-Python-标准库.md","raw":"layout: post\npublished: true\ntitle: Python标准库\ntags:\n  - python\ncategories: []\ndate: 2018-09-01 07:38:00\n---\nPython丰富而强大遍历的标准库是其最突出的优点之一.\n\n这里当然不可能说明所有的标准库, 本文只简单列出一些标准库的使用, 还有一部分在其它博文中说明:\n\n    Python时间系统\n    Python解析xml与JSON\n    requests发送HTTP请求\n    PDB调试Python程序\n    Python日志模块logging\n    Python正则表达式模块re\n    Python虚拟环境virtualenv\n    Python 数据库\n    Python Socket\n    Python WSGI接口\n    使用urllib访问网络资源\n\n操作系统环境os\n\n建议使用 import os 风格而非 from os import *。这样可以保证随操作系统不同而有所变化的 os.open() 不会覆盖内置函数 open()。\n\n在使用 os 这样的大型模块时内置的 dir() 和 help() 函数非常有用。\n命令行参数sys\n\n通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量。\n\nsys 还有 stdin，stdout 和 stderr 属性，即使在 stdout 被重定向时，后者也可以用于显示警告和错误信息。\n\n    >>> sys.stderr.write('Warning, log file not found starting a new one\\n')\n    Warning, log file not found starting a new one\n\n数学math\n数据压缩zlib\n\n以下模块直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile。\n\n    >>> import zlib\n    >>> s = b'witch which has which witches wrist watch'\n    >>> len(s)\n    41\n    >>> t = zlib.compress(s)\n    >>> len(t)\n    37\n    >>> zlib.decompress(t)\n    b'witch which has which witches wrist watch'\n    >>> zlib.crc32(s)\n    226805979\n\n性能测试timeit\n\n    >>> from timeit import Timer\n    >>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit()\n    0.57535828626024577\n    >>> Timer('a,b = b,a', 'a=1; b=2').timeit()\n    0.54962537085770791\n\n文件通配符glob\n\nglob模块提供了一个函数用于从目录通配符搜索中生成文件列表：\n\n    >>> import glob\n    >>> glob.glob('*.py')\n    ['primes.py', 'random.py', 'quote.py']  \n\n高精度小数 decimal\n\ndecmial模块可以提供制定精度的小数运算，使用前需要>>>import decmial。decmial对象由构造函数decmial.Decmial()根据一个int或字符串参数建立。Python3.5中decmial.Decmial()可以根据float建立对象，但那是不精确的。\n\n    >>>decimal.Decimal(1)\n    Decimal('1')\n    >>>decimal.Decimal(\"1.2\")\n    Decimal('1.2')\n\nmath与cmath库中的数学函数对decimal不适用，但decimal自身提供了一系列数学函数。\n\n    >>> x = decimal.Decimal(2)\n    >>> x.exp()\n    Decimal('7.389056098930650227230427461')\n    >>> decimal.Decimal.exp(x)\n    Decimal('7.389056098930650227230427461')\n\n对象序列化pickle\n\nPython的pickle模块实现了基本的数据序列和反序列化。\n序列化：\n​\nimport pickle\npickle.dump(obj, file, [,protocol])\n\n反序列化：\n\nobj = pickle.load(file)","slug":"2018-07-10-Python-标准库","updated":"2018-09-01T08:43:14.255Z","comments":1,"photos":[],"link":"","_id":"cjlj9djps0002wnpeyp10vgwk","content":"<p>Python丰富而强大遍历的标准库是其最突出的优点之一.</p>\n<p>这里当然不可能说明所有的标准库, 本文只简单列出一些标准库的使用, 还有一部分在其它博文中说明:</p>\n<pre><code>Python时间系统\nPython解析xml与JSON\nrequests发送HTTP请求\nPDB调试Python程序\nPython日志模块logging\nPython正则表达式模块re\nPython虚拟环境virtualenv\nPython 数据库\nPython Socket\nPython WSGI接口\n使用urllib访问网络资源\n</code></pre><p>操作系统环境os</p>\n<p>建议使用 import os 风格而非 from os import *。这样可以保证随操作系统不同而有所变化的 os.open() 不会覆盖内置函数 open()。</p>\n<p>在使用 os 这样的大型模块时内置的 dir() 和 help() 函数非常有用。<br>命令行参数sys</p>\n<p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量。</p>\n<p>sys 还有 stdin，stdout 和 stderr 属性，即使在 stdout 被重定向时，后者也可以用于显示警告和错误信息。</p>\n<pre><code>&gt;&gt;&gt; sys.stderr.write(&apos;Warning, log file not found starting a new one\\n&apos;)\nWarning, log file not found starting a new one\n</code></pre><p>数学math<br>数据压缩zlib</p>\n<p>以下模块直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile。</p>\n<pre><code>&gt;&gt;&gt; import zlib\n&gt;&gt;&gt; s = b&apos;witch which has which witches wrist watch&apos;\n&gt;&gt;&gt; len(s)\n41\n&gt;&gt;&gt; t = zlib.compress(s)\n&gt;&gt;&gt; len(t)\n37\n&gt;&gt;&gt; zlib.decompress(t)\nb&apos;witch which has which witches wrist watch&apos;\n&gt;&gt;&gt; zlib.crc32(s)\n226805979\n</code></pre><p>性能测试timeit</p>\n<pre><code>&gt;&gt;&gt; from timeit import Timer\n&gt;&gt;&gt; Timer(&apos;t=a; a=b; b=t&apos;, &apos;a=1; b=2&apos;).timeit()\n0.57535828626024577\n&gt;&gt;&gt; Timer(&apos;a,b = b,a&apos;, &apos;a=1; b=2&apos;).timeit()\n0.54962537085770791\n</code></pre><p>文件通配符glob</p>\n<p>glob模块提供了一个函数用于从目录通配符搜索中生成文件列表：</p>\n<pre><code>&gt;&gt;&gt; import glob\n&gt;&gt;&gt; glob.glob(&apos;*.py&apos;)\n[&apos;primes.py&apos;, &apos;random.py&apos;, &apos;quote.py&apos;]  \n</code></pre><p>高精度小数 decimal</p>\n<p>decmial模块可以提供制定精度的小数运算，使用前需要&gt;&gt;&gt;import decmial。decmial对象由构造函数decmial.Decmial()根据一个int或字符串参数建立。Python3.5中decmial.Decmial()可以根据float建立对象，但那是不精确的。</p>\n<pre><code>&gt;&gt;&gt;decimal.Decimal(1)\nDecimal(&apos;1&apos;)\n&gt;&gt;&gt;decimal.Decimal(&quot;1.2&quot;)\nDecimal(&apos;1.2&apos;)\n</code></pre><p>math与cmath库中的数学函数对decimal不适用，但decimal自身提供了一系列数学函数。</p>\n<pre><code>&gt;&gt;&gt; x = decimal.Decimal(2)\n&gt;&gt;&gt; x.exp()\nDecimal(&apos;7.389056098930650227230427461&apos;)\n&gt;&gt;&gt; decimal.Decimal.exp(x)\nDecimal(&apos;7.389056098930650227230427461&apos;)\n</code></pre><p>对象序列化pickle</p>\n<p>Python的pickle模块实现了基本的数据序列和反序列化。<br>序列化：<br>​<br>import pickle<br>pickle.dump(obj, file, [,protocol])</p>\n<p>反序列化：</p>\n<p>obj = pickle.load(file)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Python丰富而强大遍历的标准库是其最突出的优点之一.</p>\n<p>这里当然不可能说明所有的标准库, 本文只简单列出一些标准库的使用, 还有一部分在其它博文中说明:</p>\n<pre><code>Python时间系统\nPython解析xml与JSON\nrequests发送HTTP请求\nPDB调试Python程序\nPython日志模块logging\nPython正则表达式模块re\nPython虚拟环境virtualenv\nPython 数据库\nPython Socket\nPython WSGI接口\n使用urllib访问网络资源\n</code></pre><p>操作系统环境os</p>\n<p>建议使用 import os 风格而非 from os import *。这样可以保证随操作系统不同而有所变化的 os.open() 不会覆盖内置函数 open()。</p>\n<p>在使用 os 这样的大型模块时内置的 dir() 和 help() 函数非常有用。<br>命令行参数sys</p>\n<p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量。</p>\n<p>sys 还有 stdin，stdout 和 stderr 属性，即使在 stdout 被重定向时，后者也可以用于显示警告和错误信息。</p>\n<pre><code>&gt;&gt;&gt; sys.stderr.write(&apos;Warning, log file not found starting a new one\\n&apos;)\nWarning, log file not found starting a new one\n</code></pre><p>数学math<br>数据压缩zlib</p>\n<p>以下模块直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile。</p>\n<pre><code>&gt;&gt;&gt; import zlib\n&gt;&gt;&gt; s = b&apos;witch which has which witches wrist watch&apos;\n&gt;&gt;&gt; len(s)\n41\n&gt;&gt;&gt; t = zlib.compress(s)\n&gt;&gt;&gt; len(t)\n37\n&gt;&gt;&gt; zlib.decompress(t)\nb&apos;witch which has which witches wrist watch&apos;\n&gt;&gt;&gt; zlib.crc32(s)\n226805979\n</code></pre><p>性能测试timeit</p>\n<pre><code>&gt;&gt;&gt; from timeit import Timer\n&gt;&gt;&gt; Timer(&apos;t=a; a=b; b=t&apos;, &apos;a=1; b=2&apos;).timeit()\n0.57535828626024577\n&gt;&gt;&gt; Timer(&apos;a,b = b,a&apos;, &apos;a=1; b=2&apos;).timeit()\n0.54962537085770791\n</code></pre><p>文件通配符glob</p>\n<p>glob模块提供了一个函数用于从目录通配符搜索中生成文件列表：</p>\n<pre><code>&gt;&gt;&gt; import glob\n&gt;&gt;&gt; glob.glob(&apos;*.py&apos;)\n[&apos;primes.py&apos;, &apos;random.py&apos;, &apos;quote.py&apos;]  \n</code></pre><p>高精度小数 decimal</p>\n<p>decmial模块可以提供制定精度的小数运算，使用前需要&gt;&gt;&gt;import decmial。decmial对象由构造函数decmial.Decmial()根据一个int或字符串参数建立。Python3.5中decmial.Decmial()可以根据float建立对象，但那是不精确的。</p>\n<pre><code>&gt;&gt;&gt;decimal.Decimal(1)\nDecimal(&apos;1&apos;)\n&gt;&gt;&gt;decimal.Decimal(&quot;1.2&quot;)\nDecimal(&apos;1.2&apos;)\n</code></pre><p>math与cmath库中的数学函数对decimal不适用，但decimal自身提供了一系列数学函数。</p>\n<pre><code>&gt;&gt;&gt; x = decimal.Decimal(2)\n&gt;&gt;&gt; x.exp()\nDecimal(&apos;7.389056098930650227230427461&apos;)\n&gt;&gt;&gt; decimal.Decimal.exp(x)\nDecimal(&apos;7.389056098930650227230427461&apos;)\n</code></pre><p>对象序列化pickle</p>\n<p>Python的pickle模块实现了基本的数据序列和反序列化。<br>序列化：<br>​<br>import pickle<br>pickle.dump(obj, file, [,protocol])</p>\n<p>反序列化：</p>\n<p>obj = pickle.load(file)</p>\n"},{"layout":"post","published":1,"title":"Python运维常用的20个库和模块","date":"2018-08-31T05:28:00.000Z","_content":"\nPython运维常用的20个库和模块\n\n1、psutil是一个跨平台库（https://github.com/giampaolo/psutil）\n能够实现获取系统运行的进程和系统利用率（内存，CPU,磁盘，网络等），主要用于系统监控，分析和系统资源及进程的管理。\n\n2、IPy（http://github.com/haypo/python-ipy）,辅助IP规划。\n\n3、dnspython(http://dnspython.org)Python实现的一个DNS工具包。\n\n4、difflib：difflib作为Python的标准模块，无需安装，作用是对比文本之间的差异。\n\n5、filecmp:系统自带，可以实现文件，目录，遍历子目录的差异，对比功能。\n\n6、smtplib：发送电子邮件模块\n\n7、pycurl(http://pycurl.sourceforge.net)是一个用C语言写的libcurl Python实现，功能强大，支持的协议有：FTP,HTTP,HTTPS,TELNET等，可以理解为Linux下curl命令功能的Python封装。（PS：PycURL在前几天的文章里有提及过）\n\n8、XlsxWriter:操作Excel工作表的文字，数字，公式，图表等。\n\n9、rrdtool:用于跟踪对象的变化，生成这些变化的走走势图\n\n10、scapy(http://www.wecdev.org/projects/scapy/)是一个强大的交互式数据包处理程序，它能够对数据包进行伪造或解包，包括发送数据包，包嗅探，应答和反馈等功能。\n\n11、Clam Antivirus免费开放源代码防毒软件，pyClamad,可以让Python模块直接使用ClamAV病毒扫描守护进程calmd。\n\n12、pexpect:可以理解成Linux下expect的Python封装，通过pexpect我们可以实现对ssh,ftp,passwd,telnet等命令行进行自动交互，而无需人工干涉来达到自动化的目的。\n\n13、paramiko是基于Python实现的SSH2远程安装连接，支持认证及密钥方式。可以实现远程命令执行，文件传输，中间SSH代理等功能。相对于Pexpect,封装的层次更高，更贴近SSH协议的功能，官网地址：http://paramiko.org(依赖：Crypto,Ecdsa,Python开发包python-devel)\n\n14、fabric是基于Python实现的SSH命令行工具，简化了SSH的应用程序部署及系统管理任务，它提供了系统基础的操作组件，可以实现本地或远程shell命令，包括命令执行，文件上传，下载及完整执行日志输出等功能。Fabric在paramiko的基础上做了更高一层的封装，操作起来更加简单。官网地址：http://www.fabfile.org(依赖setuptools,Crypto,paramiko包支持)\n\n15、CGIHTTPRequestHandler实现对CGI的支持。\n\n16、ansible(http://www.ansibleworks.com/)一种集成IT系统的配置管理，应用部署，执行特定任务的开源平台。基于Python实现，由Paramiko和PyYAML两个关键模块构建。Ansibl与Saltstack最大的区别是Ansible无需在被控主机上部署任何客户端，默认直接通过SSH通道进行远程命令执行或下发功能。\n\n17、YAML:是一种用来表达数据序列的编程语言。\n\n18、playbook：一个非常简单的配置管理和多主机部署系统。\n\n19、saltstack(http://saltstack.com)是一个服务器基础架构集中化管理平台，一般可以理解为简化版的puppet和加强版的func。Saltstack基于Python语言实现，结合轻量级消息队列ZeroMQ,与Python每三方模块（Pyzmq,PyCrypto,Pyjinja2,python-msgpack和PyYAML等）构建。\n\n20、func，为解决集群管理，监控问题需设计开发的系统管理基础框架。\n","source":"_posts/2018-07-10-python-test.md","raw":"layout: post\npublished: true\ntitle: Python运维常用的20个库和模块\ntags:\n  - python\ncategories:\n  - python\ndate: 2018-08-31 13:28:00\n---\n\nPython运维常用的20个库和模块\n\n1、psutil是一个跨平台库（https://github.com/giampaolo/psutil）\n能够实现获取系统运行的进程和系统利用率（内存，CPU,磁盘，网络等），主要用于系统监控，分析和系统资源及进程的管理。\n\n2、IPy（http://github.com/haypo/python-ipy）,辅助IP规划。\n\n3、dnspython(http://dnspython.org)Python实现的一个DNS工具包。\n\n4、difflib：difflib作为Python的标准模块，无需安装，作用是对比文本之间的差异。\n\n5、filecmp:系统自带，可以实现文件，目录，遍历子目录的差异，对比功能。\n\n6、smtplib：发送电子邮件模块\n\n7、pycurl(http://pycurl.sourceforge.net)是一个用C语言写的libcurl Python实现，功能强大，支持的协议有：FTP,HTTP,HTTPS,TELNET等，可以理解为Linux下curl命令功能的Python封装。（PS：PycURL在前几天的文章里有提及过）\n\n8、XlsxWriter:操作Excel工作表的文字，数字，公式，图表等。\n\n9、rrdtool:用于跟踪对象的变化，生成这些变化的走走势图\n\n10、scapy(http://www.wecdev.org/projects/scapy/)是一个强大的交互式数据包处理程序，它能够对数据包进行伪造或解包，包括发送数据包，包嗅探，应答和反馈等功能。\n\n11、Clam Antivirus免费开放源代码防毒软件，pyClamad,可以让Python模块直接使用ClamAV病毒扫描守护进程calmd。\n\n12、pexpect:可以理解成Linux下expect的Python封装，通过pexpect我们可以实现对ssh,ftp,passwd,telnet等命令行进行自动交互，而无需人工干涉来达到自动化的目的。\n\n13、paramiko是基于Python实现的SSH2远程安装连接，支持认证及密钥方式。可以实现远程命令执行，文件传输，中间SSH代理等功能。相对于Pexpect,封装的层次更高，更贴近SSH协议的功能，官网地址：http://paramiko.org(依赖：Crypto,Ecdsa,Python开发包python-devel)\n\n14、fabric是基于Python实现的SSH命令行工具，简化了SSH的应用程序部署及系统管理任务，它提供了系统基础的操作组件，可以实现本地或远程shell命令，包括命令执行，文件上传，下载及完整执行日志输出等功能。Fabric在paramiko的基础上做了更高一层的封装，操作起来更加简单。官网地址：http://www.fabfile.org(依赖setuptools,Crypto,paramiko包支持)\n\n15、CGIHTTPRequestHandler实现对CGI的支持。\n\n16、ansible(http://www.ansibleworks.com/)一种集成IT系统的配置管理，应用部署，执行特定任务的开源平台。基于Python实现，由Paramiko和PyYAML两个关键模块构建。Ansibl与Saltstack最大的区别是Ansible无需在被控主机上部署任何客户端，默认直接通过SSH通道进行远程命令执行或下发功能。\n\n17、YAML:是一种用来表达数据序列的编程语言。\n\n18、playbook：一个非常简单的配置管理和多主机部署系统。\n\n19、saltstack(http://saltstack.com)是一个服务器基础架构集中化管理平台，一般可以理解为简化版的puppet和加强版的func。Saltstack基于Python语言实现，结合轻量级消息队列ZeroMQ,与Python每三方模块（Pyzmq,PyCrypto,Pyjinja2,python-msgpack和PyYAML等）构建。\n\n20、func，为解决集群管理，监控问题需设计开发的系统管理基础框架。\n","slug":"2018-07-10-python-test","updated":"2018-09-01T07:33:40.130Z","comments":1,"photos":[],"link":"","_id":"cjlj9djpx0004wnpejofc4n84","content":"<p>Python运维常用的20个库和模块</p>\n<p>1、psutil是一个跨平台库（<a href=\"https://github.com/giampaolo/psutil）\" target=\"_blank\" rel=\"noopener\">https://github.com/giampaolo/psutil）</a><br>能够实现获取系统运行的进程和系统利用率（内存，CPU,磁盘，网络等），主要用于系统监控，分析和系统资源及进程的管理。</p>\n<p>2、IPy（<a href=\"http://github.com/haypo/python-ipy）,辅助IP规划。\" target=\"_blank\" rel=\"noopener\">http://github.com/haypo/python-ipy）,辅助IP规划。</a></p>\n<p>3、dnspython(<a href=\"http://dnspython.org)Python实现的一个DNS工具包。\" target=\"_blank\" rel=\"noopener\">http://dnspython.org)Python实现的一个DNS工具包。</a></p>\n<p>4、difflib：difflib作为Python的标准模块，无需安装，作用是对比文本之间的差异。</p>\n<p>5、filecmp:系统自带，可以实现文件，目录，遍历子目录的差异，对比功能。</p>\n<p>6、smtplib：发送电子邮件模块</p>\n<p>7、pycurl(<a href=\"http://pycurl.sourceforge.net)是一个用C语言写的libcurl\" target=\"_blank\" rel=\"noopener\">http://pycurl.sourceforge.net)是一个用C语言写的libcurl</a> Python实现，功能强大，支持的协议有：FTP,HTTP,HTTPS,TELNET等，可以理解为Linux下curl命令功能的Python封装。（PS：PycURL在前几天的文章里有提及过）</p>\n<p>8、XlsxWriter:操作Excel工作表的文字，数字，公式，图表等。</p>\n<p>9、rrdtool:用于跟踪对象的变化，生成这些变化的走走势图</p>\n<p>10、scapy(<a href=\"http://www.wecdev.org/projects/scapy/)是一个强大的交互式数据包处理程序，它能够对数据包进行伪造或解包，包括发送数据包，包嗅探，应答和反馈等功能。\" target=\"_blank\" rel=\"noopener\">http://www.wecdev.org/projects/scapy/)是一个强大的交互式数据包处理程序，它能够对数据包进行伪造或解包，包括发送数据包，包嗅探，应答和反馈等功能。</a></p>\n<p>11、Clam Antivirus免费开放源代码防毒软件，pyClamad,可以让Python模块直接使用ClamAV病毒扫描守护进程calmd。</p>\n<p>12、pexpect:可以理解成Linux下expect的Python封装，通过pexpect我们可以实现对ssh,ftp,passwd,telnet等命令行进行自动交互，而无需人工干涉来达到自动化的目的。</p>\n<p>13、paramiko是基于Python实现的SSH2远程安装连接，支持认证及密钥方式。可以实现远程命令执行，文件传输，中间SSH代理等功能。相对于Pexpect,封装的层次更高，更贴近SSH协议的功能，官网地址：<a href=\"http://paramiko.org(依赖：Crypto,Ecdsa,Python开发包python-devel)\" target=\"_blank\" rel=\"noopener\">http://paramiko.org(依赖：Crypto,Ecdsa,Python开发包python-devel)</a></p>\n<p>14、fabric是基于Python实现的SSH命令行工具，简化了SSH的应用程序部署及系统管理任务，它提供了系统基础的操作组件，可以实现本地或远程shell命令，包括命令执行，文件上传，下载及完整执行日志输出等功能。Fabric在paramiko的基础上做了更高一层的封装，操作起来更加简单。官网地址：<a href=\"http://www.fabfile.org(依赖setuptools,Crypto,paramiko包支持)\" target=\"_blank\" rel=\"noopener\">http://www.fabfile.org(依赖setuptools,Crypto,paramiko包支持)</a></p>\n<p>15、CGIHTTPRequestHandler实现对CGI的支持。</p>\n<p>16、ansible(<a href=\"http://www.ansibleworks.com/)一种集成IT系统的配置管理，应用部署，执行特定任务的开源平台。基于Python实现，由Paramiko和PyYAML两个关键模块构建。Ansibl与Saltstack最大的区别是Ansible无需在被控主机上部署任何客户端，默认直接通过SSH通道进行远程命令执行或下发功能。\" target=\"_blank\" rel=\"noopener\">http://www.ansibleworks.com/)一种集成IT系统的配置管理，应用部署，执行特定任务的开源平台。基于Python实现，由Paramiko和PyYAML两个关键模块构建。Ansibl与Saltstack最大的区别是Ansible无需在被控主机上部署任何客户端，默认直接通过SSH通道进行远程命令执行或下发功能。</a></p>\n<p>17、YAML:是一种用来表达数据序列的编程语言。</p>\n<p>18、playbook：一个非常简单的配置管理和多主机部署系统。</p>\n<p>19、saltstack(<a href=\"http://saltstack.com)是一个服务器基础架构集中化管理平台，一般可以理解为简化版的puppet和加强版的func。Saltstack基于Python语言实现，结合轻量级消息队列ZeroMQ,与Python每三方模块（Pyzmq,PyCrypto,Pyjinja2,python-msgpack和PyYAML等）构建。\" target=\"_blank\" rel=\"noopener\">http://saltstack.com)是一个服务器基础架构集中化管理平台，一般可以理解为简化版的puppet和加强版的func。Saltstack基于Python语言实现，结合轻量级消息队列ZeroMQ,与Python每三方模块（Pyzmq,PyCrypto,Pyjinja2,python-msgpack和PyYAML等）构建。</a></p>\n<p>20、func，为解决集群管理，监控问题需设计开发的系统管理基础框架。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Python运维常用的20个库和模块</p>\n<p>1、psutil是一个跨平台库（<a href=\"https://github.com/giampaolo/psutil）\" target=\"_blank\" rel=\"noopener\">https://github.com/giampaolo/psutil）</a><br>能够实现获取系统运行的进程和系统利用率（内存，CPU,磁盘，网络等），主要用于系统监控，分析和系统资源及进程的管理。</p>\n<p>2、IPy（<a href=\"http://github.com/haypo/python-ipy）,辅助IP规划。\" target=\"_blank\" rel=\"noopener\">http://github.com/haypo/python-ipy）,辅助IP规划。</a></p>\n<p>3、dnspython(<a href=\"http://dnspython.org)Python实现的一个DNS工具包。\" target=\"_blank\" rel=\"noopener\">http://dnspython.org)Python实现的一个DNS工具包。</a></p>\n<p>4、difflib：difflib作为Python的标准模块，无需安装，作用是对比文本之间的差异。</p>\n<p>5、filecmp:系统自带，可以实现文件，目录，遍历子目录的差异，对比功能。</p>\n<p>6、smtplib：发送电子邮件模块</p>\n<p>7、pycurl(<a href=\"http://pycurl.sourceforge.net)是一个用C语言写的libcurl\" target=\"_blank\" rel=\"noopener\">http://pycurl.sourceforge.net)是一个用C语言写的libcurl</a> Python实现，功能强大，支持的协议有：FTP,HTTP,HTTPS,TELNET等，可以理解为Linux下curl命令功能的Python封装。（PS：PycURL在前几天的文章里有提及过）</p>\n<p>8、XlsxWriter:操作Excel工作表的文字，数字，公式，图表等。</p>\n<p>9、rrdtool:用于跟踪对象的变化，生成这些变化的走走势图</p>\n<p>10、scapy(<a href=\"http://www.wecdev.org/projects/scapy/)是一个强大的交互式数据包处理程序，它能够对数据包进行伪造或解包，包括发送数据包，包嗅探，应答和反馈等功能。\" target=\"_blank\" rel=\"noopener\">http://www.wecdev.org/projects/scapy/)是一个强大的交互式数据包处理程序，它能够对数据包进行伪造或解包，包括发送数据包，包嗅探，应答和反馈等功能。</a></p>\n<p>11、Clam Antivirus免费开放源代码防毒软件，pyClamad,可以让Python模块直接使用ClamAV病毒扫描守护进程calmd。</p>\n<p>12、pexpect:可以理解成Linux下expect的Python封装，通过pexpect我们可以实现对ssh,ftp,passwd,telnet等命令行进行自动交互，而无需人工干涉来达到自动化的目的。</p>\n<p>13、paramiko是基于Python实现的SSH2远程安装连接，支持认证及密钥方式。可以实现远程命令执行，文件传输，中间SSH代理等功能。相对于Pexpect,封装的层次更高，更贴近SSH协议的功能，官网地址：<a href=\"http://paramiko.org(依赖：Crypto,Ecdsa,Python开发包python-devel)\" target=\"_blank\" rel=\"noopener\">http://paramiko.org(依赖：Crypto,Ecdsa,Python开发包python-devel)</a></p>\n<p>14、fabric是基于Python实现的SSH命令行工具，简化了SSH的应用程序部署及系统管理任务，它提供了系统基础的操作组件，可以实现本地或远程shell命令，包括命令执行，文件上传，下载及完整执行日志输出等功能。Fabric在paramiko的基础上做了更高一层的封装，操作起来更加简单。官网地址：<a href=\"http://www.fabfile.org(依赖setuptools,Crypto,paramiko包支持)\" target=\"_blank\" rel=\"noopener\">http://www.fabfile.org(依赖setuptools,Crypto,paramiko包支持)</a></p>\n<p>15、CGIHTTPRequestHandler实现对CGI的支持。</p>\n<p>16、ansible(<a href=\"http://www.ansibleworks.com/)一种集成IT系统的配置管理，应用部署，执行特定任务的开源平台。基于Python实现，由Paramiko和PyYAML两个关键模块构建。Ansibl与Saltstack最大的区别是Ansible无需在被控主机上部署任何客户端，默认直接通过SSH通道进行远程命令执行或下发功能。\" target=\"_blank\" rel=\"noopener\">http://www.ansibleworks.com/)一种集成IT系统的配置管理，应用部署，执行特定任务的开源平台。基于Python实现，由Paramiko和PyYAML两个关键模块构建。Ansibl与Saltstack最大的区别是Ansible无需在被控主机上部署任何客户端，默认直接通过SSH通道进行远程命令执行或下发功能。</a></p>\n<p>17、YAML:是一种用来表达数据序列的编程语言。</p>\n<p>18、playbook：一个非常简单的配置管理和多主机部署系统。</p>\n<p>19、saltstack(<a href=\"http://saltstack.com)是一个服务器基础架构集中化管理平台，一般可以理解为简化版的puppet和加强版的func。Saltstack基于Python语言实现，结合轻量级消息队列ZeroMQ,与Python每三方模块（Pyzmq,PyCrypto,Pyjinja2,python-msgpack和PyYAML等）构建。\" target=\"_blank\" rel=\"noopener\">http://saltstack.com)是一个服务器基础架构集中化管理平台，一般可以理解为简化版的puppet和加强版的func。Saltstack基于Python语言实现，结合轻量级消息队列ZeroMQ,与Python每三方模块（Pyzmq,PyCrypto,Pyjinja2,python-msgpack和PyYAML等）构建。</a></p>\n<p>20、func，为解决集群管理，监控问题需设计开发的系统管理基础框架。</p>\n"},{"layout":"post","published":1,"title":"docker三剑客compose、machine、swarm","date":"2018-08-31T09:43:00.000Z","_content":"#### docker三剑客compose、machine、swarm\n##### docker-compose\n   安装compose\n   \n     curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\n\n    chmod +x /usr/local/bin/docker-compose\n    \n\n测试安装\n\n      $ docker-compose --version\n      docker-compose version 1.21.2, build 1719ceb\n常用命令\n\n    \t  命令:\n          build              Build or rebuild services\n          bundle             Generate a Docker bundle from the Compose file\n          config             Validate and view the Compose file\n          create             Create services\n          down               Stop and remove containers, networks, images, and volumes\n          events             Receive real time events from containers\n          exec               Execute a command in a running container\n          help               Get help on a command\n          images             List images\n          kill               Kill containers\n          logs               View output from containers\n          pause              Pause services\n          port               Print the public port for a port binding\n          ps                 List containers\n          pull               Pull service images\n          push               Push service images\n          restart            Restart services\n          rm                 Remove stopped containers\n          run                Run a one-off command\n          scale              Set number of containers for a service\n          start              Start services\n          stop               Stop services\n          top                Display the running processes\n          unpause            Unpause services\n          up                 Create and start containers\n          version            Show the Docker-Compose version information\n\nhttps://docs.docker.com/compose/overview/\n\n#### docker-machine\n简介\n\ndocker-machine是安装docker环境的一个工具，可以在一台机器上通过命令控制几台机器安装docker环境，运行docker命令，创建docker swarm集群的工具。\n\n安装\n\ndocker-machine和compose有点类似，都是一个可运行的linux二进制文件(下面都是基于linux版本做的)，下载下来这个文件后放到/usr/local/bin里面设置文件权限就可以直接使用了，docker-machine的github地址https://github.com/docker/machine\n\n    curl -L https://github.com/docker/machine/releases/download/v0.10.0/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine &&\n    chmod +x /tmp/docker-machine &&\n    sudo cp /tmp/docker-machine /usr/local/bin/docker-machine\n使用\n\n按照docker-machine github上的介绍，它是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。根据他的描述和github上的例子可以看出他可以直接在指定平台上创建机器。\n\n我们这里只测试已经创建好有ip的实体机或者虚拟机。docker-machine操作各个机器实际上用ssh无密码访问的，如果是在已经配置好ip的实体机或虚拟机上用就要手动或者使用脚本设置无密码访问了。\n\n无密码访问\nssh-keygen #一直回车\n\nssh-copy-id root@192.168.1.28 #ip为docker-machine要操作的机器，输入密码\n上面结束之后，每台机器上还得安装net-tools,docker-machine会用到netstat命令来检测端口使用情况，如果机器上没有安装会报错。如果你确定那台机器上的端口没问题，即使报错也没问题，最终那台机器还是会加入到docker-machine的管理中。\nyum install net-tools\n连接机器\n    docker-machine create -d generic --generic-ip-address=192.168.1.28 node28\n    node28为给机器的别名\n    -d generic驱动类型\n    –generic-ip-address 要控制机器的ip，必须\n    –generic-engine-port docker-engine的远程访问端口，默认为2376\n    –generic-ssh-key 远程访问机器的私钥，默认使用.ssh/下面的私钥\n    –generic-ssh-user 远程访问机器的用户名，默认为root\n    –generic-ssh-port 远程ssh访问的端口，默认为22\n    –engine-insecure-registry docker-engine的insecure-registry\n    –engine-install-url 安装docker-engine的地址，默认为”https://get.docker.com”\n    –engine-registry-mirror docker-engine镜像的代理地址\n上面的命令根据国内环境可以换为下面\n    docker-machine create \\\n    -d generic \\\n    --generic-ip-address=192.168.1.28 \\\n    --engine-install-url=https://get.daocloud.io/docker/   \\\n    --engine-registry-mirror=http://91c0cc1e.m.daocloud.io  \\\n    node28 \n通过docker-machine连接了各个机器后，就可以通过docker-machine来操作各个机器了，更多命令查看 docker-machine –help\nhttps://docs.docker.com/machine/install-machine/\nhttps://blog.csdn.net/vchy_zhao/article/details/70238472\n#### swarm\n##### 简介\nswarm从docker1.9版本开始就有了，但功能不完善、性能不稳定，一直不能登入生产环境，从1.12版本内置到了docker-engine中，可以直接使用docker swarm命令来操作swarm。\n\nswarm是docker集群的资源管理工具。简单点理解，在很多台机器上部署docker，组成一个docker集群，并把整个集群的资源抽象成资源池，使用者部署docker应用的时候，只需要将应用交给swarm，swarm会根据整个集群资源的使用情况来分配资源给部署的docker应用，可以将这个集群的资源利用率达到最大。\n类似的服务框架还有mesos+marathon，kubernetes。\n\n①最早使用的是mesos+marathon那一套，优点是基于成熟的资源调度管理框架mesos，缺点是部署起来还是很麻烦的，像服务发现、负载均衡等概念在里面也都有，但都是碎片化以插件的形式存在，整个体系感觉不是很完善、不像一个整体。\n\n②kubernetes从发布1.0版本以后在生产得到了很多实践，开始步入主流压过swarm和mesos+marathon，kubernetes针对docker应用集群的特点，概括出几个对象，pod、service、replication controller，pod为运行的基本单元，service则是专门来服务发现和服务代理的，replication controller 应用的副本做负载均衡。kubernetes就是一个很专业很全面完善的docker集群管理工具。\n\n③swarm在很多方面很像kubernetes，不知道是不是偷偷抄袭的。swarm通过命令就可以很简单的在docker集群中创建应用设置副本数量，内置服务发现代理。swarm+compose≈kubernetes。swarm由于现在内置于docker中，使用部署更简单，功能上和kubernetes很相似，轻量级。\n\n常用命令\n\n      swarm init\n      swarm join\n      service create\n      service inspect\n      service ls\n      service rm\n      service scale\n      service ps\n      service update","source":"_posts/2018-08-08-docker.md","raw":"layout: post\npublished: true\ntitle: docker三剑客compose、machine、swarm\ntags:\n  - docker\ncategories:\n  - 容器云\ndate: 2018-08-31 17:43:00\n---\n#### docker三剑客compose、machine、swarm\n##### docker-compose\n   安装compose\n   \n     curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\n\n    chmod +x /usr/local/bin/docker-compose\n    \n\n测试安装\n\n      $ docker-compose --version\n      docker-compose version 1.21.2, build 1719ceb\n常用命令\n\n    \t  命令:\n          build              Build or rebuild services\n          bundle             Generate a Docker bundle from the Compose file\n          config             Validate and view the Compose file\n          create             Create services\n          down               Stop and remove containers, networks, images, and volumes\n          events             Receive real time events from containers\n          exec               Execute a command in a running container\n          help               Get help on a command\n          images             List images\n          kill               Kill containers\n          logs               View output from containers\n          pause              Pause services\n          port               Print the public port for a port binding\n          ps                 List containers\n          pull               Pull service images\n          push               Push service images\n          restart            Restart services\n          rm                 Remove stopped containers\n          run                Run a one-off command\n          scale              Set number of containers for a service\n          start              Start services\n          stop               Stop services\n          top                Display the running processes\n          unpause            Unpause services\n          up                 Create and start containers\n          version            Show the Docker-Compose version information\n\nhttps://docs.docker.com/compose/overview/\n\n#### docker-machine\n简介\n\ndocker-machine是安装docker环境的一个工具，可以在一台机器上通过命令控制几台机器安装docker环境，运行docker命令，创建docker swarm集群的工具。\n\n安装\n\ndocker-machine和compose有点类似，都是一个可运行的linux二进制文件(下面都是基于linux版本做的)，下载下来这个文件后放到/usr/local/bin里面设置文件权限就可以直接使用了，docker-machine的github地址https://github.com/docker/machine\n\n    curl -L https://github.com/docker/machine/releases/download/v0.10.0/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine &&\n    chmod +x /tmp/docker-machine &&\n    sudo cp /tmp/docker-machine /usr/local/bin/docker-machine\n使用\n\n按照docker-machine github上的介绍，它是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。根据他的描述和github上的例子可以看出他可以直接在指定平台上创建机器。\n\n我们这里只测试已经创建好有ip的实体机或者虚拟机。docker-machine操作各个机器实际上用ssh无密码访问的，如果是在已经配置好ip的实体机或虚拟机上用就要手动或者使用脚本设置无密码访问了。\n\n无密码访问\nssh-keygen #一直回车\n\nssh-copy-id root@192.168.1.28 #ip为docker-machine要操作的机器，输入密码\n上面结束之后，每台机器上还得安装net-tools,docker-machine会用到netstat命令来检测端口使用情况，如果机器上没有安装会报错。如果你确定那台机器上的端口没问题，即使报错也没问题，最终那台机器还是会加入到docker-machine的管理中。\nyum install net-tools\n连接机器\n    docker-machine create -d generic --generic-ip-address=192.168.1.28 node28\n    node28为给机器的别名\n    -d generic驱动类型\n    –generic-ip-address 要控制机器的ip，必须\n    –generic-engine-port docker-engine的远程访问端口，默认为2376\n    –generic-ssh-key 远程访问机器的私钥，默认使用.ssh/下面的私钥\n    –generic-ssh-user 远程访问机器的用户名，默认为root\n    –generic-ssh-port 远程ssh访问的端口，默认为22\n    –engine-insecure-registry docker-engine的insecure-registry\n    –engine-install-url 安装docker-engine的地址，默认为”https://get.docker.com”\n    –engine-registry-mirror docker-engine镜像的代理地址\n上面的命令根据国内环境可以换为下面\n    docker-machine create \\\n    -d generic \\\n    --generic-ip-address=192.168.1.28 \\\n    --engine-install-url=https://get.daocloud.io/docker/   \\\n    --engine-registry-mirror=http://91c0cc1e.m.daocloud.io  \\\n    node28 \n通过docker-machine连接了各个机器后，就可以通过docker-machine来操作各个机器了，更多命令查看 docker-machine –help\nhttps://docs.docker.com/machine/install-machine/\nhttps://blog.csdn.net/vchy_zhao/article/details/70238472\n#### swarm\n##### 简介\nswarm从docker1.9版本开始就有了，但功能不完善、性能不稳定，一直不能登入生产环境，从1.12版本内置到了docker-engine中，可以直接使用docker swarm命令来操作swarm。\n\nswarm是docker集群的资源管理工具。简单点理解，在很多台机器上部署docker，组成一个docker集群，并把整个集群的资源抽象成资源池，使用者部署docker应用的时候，只需要将应用交给swarm，swarm会根据整个集群资源的使用情况来分配资源给部署的docker应用，可以将这个集群的资源利用率达到最大。\n类似的服务框架还有mesos+marathon，kubernetes。\n\n①最早使用的是mesos+marathon那一套，优点是基于成熟的资源调度管理框架mesos，缺点是部署起来还是很麻烦的，像服务发现、负载均衡等概念在里面也都有，但都是碎片化以插件的形式存在，整个体系感觉不是很完善、不像一个整体。\n\n②kubernetes从发布1.0版本以后在生产得到了很多实践，开始步入主流压过swarm和mesos+marathon，kubernetes针对docker应用集群的特点，概括出几个对象，pod、service、replication controller，pod为运行的基本单元，service则是专门来服务发现和服务代理的，replication controller 应用的副本做负载均衡。kubernetes就是一个很专业很全面完善的docker集群管理工具。\n\n③swarm在很多方面很像kubernetes，不知道是不是偷偷抄袭的。swarm通过命令就可以很简单的在docker集群中创建应用设置副本数量，内置服务发现代理。swarm+compose≈kubernetes。swarm由于现在内置于docker中，使用部署更简单，功能上和kubernetes很相似，轻量级。\n\n常用命令\n\n      swarm init\n      swarm join\n      service create\n      service inspect\n      service ls\n      service rm\n      service scale\n      service ps\n      service update","slug":"2018-08-08-docker","updated":"2018-09-01T02:47:44.707Z","comments":1,"photos":[],"link":"","_id":"cjlj9djq40007wnped9u46dy6","content":"<h4 id=\"docker三剑客compose、machine、swarm\"><a href=\"#docker三剑客compose、machine、swarm\" class=\"headerlink\" title=\"docker三剑客compose、machine、swarm\"></a>docker三剑客compose、machine、swarm</h4><h5 id=\"docker-compose\"><a href=\"#docker-compose\" class=\"headerlink\" title=\"docker-compose\"></a>docker-compose</h5><p>   安装compose</p>\n<pre><code> curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\n\nchmod +x /usr/local/bin/docker-compose\n</code></pre><p>测试安装</p>\n<pre><code>$ docker-compose --version\ndocker-compose version 1.21.2, build 1719ceb\n</code></pre><p>常用命令</p>\n<pre><code>命令:\nbuild              Build or rebuild services\nbundle             Generate a Docker bundle from the Compose file\nconfig             Validate and view the Compose file\ncreate             Create services\ndown               Stop and remove containers, networks, images, and volumes\nevents             Receive real time events from containers\nexec               Execute a command in a running container\nhelp               Get help on a command\nimages             List images\nkill               Kill containers\nlogs               View output from containers\npause              Pause services\nport               Print the public port for a port binding\nps                 List containers\npull               Pull service images\npush               Push service images\nrestart            Restart services\nrm                 Remove stopped containers\nrun                Run a one-off command\nscale              Set number of containers for a service\nstart              Start services\nstop               Stop services\ntop                Display the running processes\nunpause            Unpause services\nup                 Create and start containers\nversion            Show the Docker-Compose version information\n</code></pre><p><a href=\"https://docs.docker.com/compose/overview/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/overview/</a></p>\n<h4 id=\"docker-machine\"><a href=\"#docker-machine\" class=\"headerlink\" title=\"docker-machine\"></a>docker-machine</h4><p>简介</p>\n<p>docker-machine是安装docker环境的一个工具，可以在一台机器上通过命令控制几台机器安装docker环境，运行docker命令，创建docker swarm集群的工具。</p>\n<p>安装</p>\n<p>docker-machine和compose有点类似，都是一个可运行的linux二进制文件(下面都是基于linux版本做的)，下载下来这个文件后放到/usr/local/bin里面设置文件权限就可以直接使用了，docker-machine的github地址<a href=\"https://github.com/docker/machine\" target=\"_blank\" rel=\"noopener\">https://github.com/docker/machine</a></p>\n<pre><code>curl -L https://github.com/docker/machine/releases/download/v0.10.0/docker-machine-`uname -s`-`uname -m` &gt;/tmp/docker-machine &amp;&amp;\nchmod +x /tmp/docker-machine &amp;&amp;\nsudo cp /tmp/docker-machine /usr/local/bin/docker-machine\n</code></pre><p>使用</p>\n<p>按照docker-machine github上的介绍，它是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。根据他的描述和github上的例子可以看出他可以直接在指定平台上创建机器。</p>\n<p>我们这里只测试已经创建好有ip的实体机或者虚拟机。docker-machine操作各个机器实际上用ssh无密码访问的，如果是在已经配置好ip的实体机或虚拟机上用就要手动或者使用脚本设置无密码访问了。</p>\n<p>无密码访问<br>ssh-keygen #一直回车</p>\n<p>ssh-copy-id <a href=\"mailto:root@192.168.1.28\" target=\"_blank\" rel=\"noopener\">root@192.168.1.28</a> #ip为docker-machine要操作的机器，输入密码<br>上面结束之后，每台机器上还得安装net-tools,docker-machine会用到netstat命令来检测端口使用情况，如果机器上没有安装会报错。如果你确定那台机器上的端口没问题，即使报错也没问题，最终那台机器还是会加入到docker-machine的管理中。<br>yum install net-tools<br>连接机器<br>    docker-machine create -d generic –generic-ip-address=192.168.1.28 node28<br>    node28为给机器的别名<br>    -d generic驱动类型<br>    –generic-ip-address 要控制机器的ip，必须<br>    –generic-engine-port docker-engine的远程访问端口，默认为2376<br>    –generic-ssh-key 远程访问机器的私钥，默认使用.ssh/下面的私钥<br>    –generic-ssh-user 远程访问机器的用户名，默认为root<br>    –generic-ssh-port 远程ssh访问的端口，默认为22<br>    –engine-insecure-registry docker-engine的insecure-registry<br>    –engine-install-url 安装docker-engine的地址，默认为”<a href=\"https://get.docker.com”\" target=\"_blank\" rel=\"noopener\">https://get.docker.com”</a><br>    –engine-registry-mirror docker-engine镜像的代理地址<br>上面的命令根据国内环境可以换为下面<br>    docker-machine create \\<br>    -d generic \\<br>    –generic-ip-address=192.168.1.28 \\<br>    –engine-install-url=<a href=\"https://get.daocloud.io/docker/\" target=\"_blank\" rel=\"noopener\">https://get.daocloud.io/docker/</a>   \\<br>    –engine-registry-mirror=<a href=\"http://91c0cc1e.m.daocloud.io\" target=\"_blank\" rel=\"noopener\">http://91c0cc1e.m.daocloud.io</a>  \\<br>    node28<br>通过docker-machine连接了各个机器后，就可以通过docker-machine来操作各个机器了，更多命令查看 docker-machine –help<br><a href=\"https://docs.docker.com/machine/install-machine/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/machine/install-machine/</a><br><a href=\"https://blog.csdn.net/vchy_zhao/article/details/70238472\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/vchy_zhao/article/details/70238472</a></p>\n<h4 id=\"swarm\"><a href=\"#swarm\" class=\"headerlink\" title=\"swarm\"></a>swarm</h4><h5 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h5><p>swarm从docker1.9版本开始就有了，但功能不完善、性能不稳定，一直不能登入生产环境，从1.12版本内置到了docker-engine中，可以直接使用docker swarm命令来操作swarm。</p>\n<p>swarm是docker集群的资源管理工具。简单点理解，在很多台机器上部署docker，组成一个docker集群，并把整个集群的资源抽象成资源池，使用者部署docker应用的时候，只需要将应用交给swarm，swarm会根据整个集群资源的使用情况来分配资源给部署的docker应用，可以将这个集群的资源利用率达到最大。<br>类似的服务框架还有mesos+marathon，kubernetes。</p>\n<p>①最早使用的是mesos+marathon那一套，优点是基于成熟的资源调度管理框架mesos，缺点是部署起来还是很麻烦的，像服务发现、负载均衡等概念在里面也都有，但都是碎片化以插件的形式存在，整个体系感觉不是很完善、不像一个整体。</p>\n<p>②kubernetes从发布1.0版本以后在生产得到了很多实践，开始步入主流压过swarm和mesos+marathon，kubernetes针对docker应用集群的特点，概括出几个对象，pod、service、replication controller，pod为运行的基本单元，service则是专门来服务发现和服务代理的，replication controller 应用的副本做负载均衡。kubernetes就是一个很专业很全面完善的docker集群管理工具。</p>\n<p>③swarm在很多方面很像kubernetes，不知道是不是偷偷抄袭的。swarm通过命令就可以很简单的在docker集群中创建应用设置副本数量，内置服务发现代理。swarm+compose≈kubernetes。swarm由于现在内置于docker中，使用部署更简单，功能上和kubernetes很相似，轻量级。</p>\n<p>常用命令</p>\n<pre><code>swarm init\nswarm join\nservice create\nservice inspect\nservice ls\nservice rm\nservice scale\nservice ps\nservice update\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"docker三剑客compose、machine、swarm\"><a href=\"#docker三剑客compose、machine、swarm\" class=\"headerlink\" title=\"docker三剑客compose、machine、swarm\"></a>docker三剑客compose、machine、swarm</h4><h5 id=\"docker-compose\"><a href=\"#docker-compose\" class=\"headerlink\" title=\"docker-compose\"></a>docker-compose</h5><p>   安装compose</p>\n<pre><code> curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\n\nchmod +x /usr/local/bin/docker-compose\n</code></pre><p>测试安装</p>\n<pre><code>$ docker-compose --version\ndocker-compose version 1.21.2, build 1719ceb\n</code></pre><p>常用命令</p>\n<pre><code>命令:\nbuild              Build or rebuild services\nbundle             Generate a Docker bundle from the Compose file\nconfig             Validate and view the Compose file\ncreate             Create services\ndown               Stop and remove containers, networks, images, and volumes\nevents             Receive real time events from containers\nexec               Execute a command in a running container\nhelp               Get help on a command\nimages             List images\nkill               Kill containers\nlogs               View output from containers\npause              Pause services\nport               Print the public port for a port binding\nps                 List containers\npull               Pull service images\npush               Push service images\nrestart            Restart services\nrm                 Remove stopped containers\nrun                Run a one-off command\nscale              Set number of containers for a service\nstart              Start services\nstop               Stop services\ntop                Display the running processes\nunpause            Unpause services\nup                 Create and start containers\nversion            Show the Docker-Compose version information\n</code></pre><p><a href=\"https://docs.docker.com/compose/overview/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/overview/</a></p>\n<h4 id=\"docker-machine\"><a href=\"#docker-machine\" class=\"headerlink\" title=\"docker-machine\"></a>docker-machine</h4><p>简介</p>\n<p>docker-machine是安装docker环境的一个工具，可以在一台机器上通过命令控制几台机器安装docker环境，运行docker命令，创建docker swarm集群的工具。</p>\n<p>安装</p>\n<p>docker-machine和compose有点类似，都是一个可运行的linux二进制文件(下面都是基于linux版本做的)，下载下来这个文件后放到/usr/local/bin里面设置文件权限就可以直接使用了，docker-machine的github地址<a href=\"https://github.com/docker/machine\" target=\"_blank\" rel=\"noopener\">https://github.com/docker/machine</a></p>\n<pre><code>curl -L https://github.com/docker/machine/releases/download/v0.10.0/docker-machine-`uname -s`-`uname -m` &gt;/tmp/docker-machine &amp;&amp;\nchmod +x /tmp/docker-machine &amp;&amp;\nsudo cp /tmp/docker-machine /usr/local/bin/docker-machine\n</code></pre><p>使用</p>\n<p>按照docker-machine github上的介绍，它是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。根据他的描述和github上的例子可以看出他可以直接在指定平台上创建机器。</p>\n<p>我们这里只测试已经创建好有ip的实体机或者虚拟机。docker-machine操作各个机器实际上用ssh无密码访问的，如果是在已经配置好ip的实体机或虚拟机上用就要手动或者使用脚本设置无密码访问了。</p>\n<p>无密码访问<br>ssh-keygen #一直回车</p>\n<p>ssh-copy-id <a href=\"mailto:root@192.168.1.28\" target=\"_blank\" rel=\"noopener\">root@192.168.1.28</a> #ip为docker-machine要操作的机器，输入密码<br>上面结束之后，每台机器上还得安装net-tools,docker-machine会用到netstat命令来检测端口使用情况，如果机器上没有安装会报错。如果你确定那台机器上的端口没问题，即使报错也没问题，最终那台机器还是会加入到docker-machine的管理中。<br>yum install net-tools<br>连接机器<br>    docker-machine create -d generic –generic-ip-address=192.168.1.28 node28<br>    node28为给机器的别名<br>    -d generic驱动类型<br>    –generic-ip-address 要控制机器的ip，必须<br>    –generic-engine-port docker-engine的远程访问端口，默认为2376<br>    –generic-ssh-key 远程访问机器的私钥，默认使用.ssh/下面的私钥<br>    –generic-ssh-user 远程访问机器的用户名，默认为root<br>    –generic-ssh-port 远程ssh访问的端口，默认为22<br>    –engine-insecure-registry docker-engine的insecure-registry<br>    –engine-install-url 安装docker-engine的地址，默认为”<a href=\"https://get.docker.com”\" target=\"_blank\" rel=\"noopener\">https://get.docker.com”</a><br>    –engine-registry-mirror docker-engine镜像的代理地址<br>上面的命令根据国内环境可以换为下面<br>    docker-machine create \\<br>    -d generic \\<br>    –generic-ip-address=192.168.1.28 \\<br>    –engine-install-url=<a href=\"https://get.daocloud.io/docker/\" target=\"_blank\" rel=\"noopener\">https://get.daocloud.io/docker/</a>   \\<br>    –engine-registry-mirror=<a href=\"http://91c0cc1e.m.daocloud.io\" target=\"_blank\" rel=\"noopener\">http://91c0cc1e.m.daocloud.io</a>  \\<br>    node28<br>通过docker-machine连接了各个机器后，就可以通过docker-machine来操作各个机器了，更多命令查看 docker-machine –help<br><a href=\"https://docs.docker.com/machine/install-machine/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/machine/install-machine/</a><br><a href=\"https://blog.csdn.net/vchy_zhao/article/details/70238472\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/vchy_zhao/article/details/70238472</a></p>\n<h4 id=\"swarm\"><a href=\"#swarm\" class=\"headerlink\" title=\"swarm\"></a>swarm</h4><h5 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h5><p>swarm从docker1.9版本开始就有了，但功能不完善、性能不稳定，一直不能登入生产环境，从1.12版本内置到了docker-engine中，可以直接使用docker swarm命令来操作swarm。</p>\n<p>swarm是docker集群的资源管理工具。简单点理解，在很多台机器上部署docker，组成一个docker集群，并把整个集群的资源抽象成资源池，使用者部署docker应用的时候，只需要将应用交给swarm，swarm会根据整个集群资源的使用情况来分配资源给部署的docker应用，可以将这个集群的资源利用率达到最大。<br>类似的服务框架还有mesos+marathon，kubernetes。</p>\n<p>①最早使用的是mesos+marathon那一套，优点是基于成熟的资源调度管理框架mesos，缺点是部署起来还是很麻烦的，像服务发现、负载均衡等概念在里面也都有，但都是碎片化以插件的形式存在，整个体系感觉不是很完善、不像一个整体。</p>\n<p>②kubernetes从发布1.0版本以后在生产得到了很多实践，开始步入主流压过swarm和mesos+marathon，kubernetes针对docker应用集群的特点，概括出几个对象，pod、service、replication controller，pod为运行的基本单元，service则是专门来服务发现和服务代理的，replication controller 应用的副本做负载均衡。kubernetes就是一个很专业很全面完善的docker集群管理工具。</p>\n<p>③swarm在很多方面很像kubernetes，不知道是不是偷偷抄袭的。swarm通过命令就可以很简单的在docker集群中创建应用设置副本数量，内置服务发现代理。swarm+compose≈kubernetes。swarm由于现在内置于docker中，使用部署更简单，功能上和kubernetes很相似，轻量级。</p>\n<p>常用命令</p>\n<pre><code>swarm init\nswarm join\nservice create\nservice inspect\nservice ls\nservice rm\nservice scale\nservice ps\nservice update\n</code></pre>"},{"title":"docker","author":"admin","date":"2018-08-31T01:12:00.000Z","_content":"docker是什么","source":"_posts/docker.md","raw":"title: docker\ntags:\n  - docker\ncategories:\n  - 容器云\nauthor: admin\ndate: 2018-08-31 09:12:00\n---\ndocker是什么","slug":"docker","published":1,"updated":"2018-09-01T02:48:12.468Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlj9djq80009wnpeg0oa4lf2","content":"<p>docker是什么</p>\n","site":{"data":{}},"excerpt":"","more":"<p>docker是什么</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-08-31T13:28:35.913Z","updated":"2018-08-31T06:29:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlj9djqb000awnpen2b1i58g","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"kubeadm安装Kubernetes1.11集群","author":"汪菲宇","date":"2018-09-01T00:43:00.000Z","_content":"- 集群环境\n      主机名称 \tIP \t备注 \t操作系统\n      master \t192.168.0.8 \tdocker、kubectl、kubelet、kubeadm、flannel \tcentos7.3\n      node01 \t192.168.0.9 \tdocker、kubectl、kubelet、kubeadm \tcentos7.3\n      node02 \t192.168.0.10 \tdocker、kubectl、kubelet、kubeadm \tcentos7.3\n\n- 软件版本\n      kubernetes：1.11.2\n      docker-ce：18.06.1-ce\n      flennal：master\n### 一、环境初始化\n\n 1、分别在各节点设置主机名称\n      hostnamectl set-hostname master\n      hostnamectl set-hostname node01\n      hostnamectl set-hostname node02\n 2、配置主机映射(各节点都需要)\n       cat <<EOF > /etc/hosts\n       127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n       ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n       192.168.0.8 master\n       192.168.0.9 node01\n       192.168.0.10 node02\n       EOF\n 3、关闭防火墙\n\t\tsystemctl stop firewalld &&  systemctl disable firewalld\n 4、关闭Selinux\n      setenforce  0 #临时禁用selinux\n      sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/sysconfig/selinux  #永久关闭 修改/etc/sysconfig/selinux文件设置\n      sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/selinux/config\n 5、关闭Swap，否则kubelet会出错！\n      swapoff -a #临时关闭swap\n      sed -i 's/.*swap.*/#&/' /etc/fstab #永久关闭 注释/etc/fstab文件里swap相关的行\n 6、配置路由 \n      cat <<EOF >  /etc/sysctl.d/k8s.conf\n      net.bridge.bridge-nf-call-ip6tables = 1\n      net.bridge.bridge-nf-call-iptables = 1\n      EOF\n使其立刻生效 \n  \tsysctl --system\n  \n 或执行\n\t\tsysctl -p /etc/sysctl.d/k8s.conf生效\n 7、安装依赖包配置ntp\n      yum install -y epel-release\n      yum install -y yum-utils device-mapper-persistent-data lvm2 net-tools conntrack-tools wget vim  ntpdate libseccomp libtool-ltdl\n      systemctl enable ntpdate.service\n      echo '*/30 * * * * /usr/sbin/ntpdate time7.aliyun.com >/dev/null 2>&1' > /tmp/crontab2.tmp\n      crontab /tmp/crontab2.tmp\n      systemctl start ntpdate.service\n8、添加kubernetes的yum源\n      cat <<EOF > /etc/yum.repos.d/kubernetes.repo\n      [kubernetes]\n      name=Kubernetes\n      baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\n      enabled=1\n      gpgcheck=1\n      repo_gpgcheck=1\n      gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\n      EOF\n9、设置内核（可不设置）\n      echo \"* soft nofile 65536\" >> /etc/security/limits.conf\n      echo \"* hard nofile 65536\" >> /etc/security/limits.conf\n      echo \"* soft nproc 65536\"  >> /etc/security/limits.conf\n      echo \"* hard nproc 65536\"  >> /etc/security/limits.conf\n      echo \"* soft  memlock  unlimited\"  >> /etc/security/limits.conf\n      echo \"* hard memlock  unlimited\"  >> /etc/security/limits.conf\n\n  自己写的一个初始化脚本[config.sh](https://github.com/fungitive/Shell-script/blob/master/kubeadm-k8s-config.sh) ，可以提高初始化效率。\n### 二、安装与配置docker\n 1、安装docker\n  参照[《Centos7安装Docker最新版》](https://blog.csdn.net/bbwangj/article/details/76040122)  \n  2、配置docker镜像下载代理 \n      \tvi /usr/lib/systemd/system/docker.service的ExecStart前加入一行\n          Environment=\"HTTPS_PROXY=http://ik8s.io:10080\"\n          Environment=\"NO_PROXY=127.0.0.0/8,172.20.0.0/16\"\n 3、重启docker\n\t\tsystemctl daemon-reload && systemctl restart docker\n### 三、安装与配置kubeadm, kubelet和kubectl\n 1、安装kubeadm, kubelet和kubectl\n\t\tyum install -y kubelet kubeadm kubectl\n2、配置kubeadm\n      vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf修改如下\n      Environment=\"KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin\"\n      systemctl enable kubelet && systemctl start kubelet\n4: 命令补全\n      yum install -y bash-completion\n      source /usr/share/bash-completion/bash_completion\n      source <(kubectl completion bash)\n      echo \"source <(kubectl completion bash)\" >> ~/.bashrc\n### 四、使用kubeadm初始化master\n 初始化的时候指定一下kubernetes版本，并设置一下pod-network-cidr（后面的flannel会用到）：\n\t\t$ kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n\n      [root@master]# kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n      [init] using Kubernetes version: v1.11.2\n      [preflight] running pre-flight checks\n      I0825 11:41:52.394205    5611 kernel_validator.go:81] Validating kernel version\n      I0825 11:41:52.394466    5611 kernel_validator.go:96] Validating kernel config\n      [preflight/images] Pulling images required for setting up a Kubernetes cluster\n      [preflight/images] This might take a minute or two, depending on the speed of your internet connection\n      [preflight/images] You can also perform this action in beforehand using 'kubeadm config images pull'\n      [kubelet] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n      [kubelet] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n      [preflight] Activating the kubelet service\n      [certificates] Generated ca certificate and key.\n      [certificates] Generated apiserver certificate and key.\n      [certificates] apiserver serving cert is signed for DNS names [master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.0.8]\n      [certificates] Generated apiserver-kubelet-client certificate and key.\n      [certificates] Generated sa key and public key.\n      [certificates] Generated front-proxy-ca certificate and key.\n      [certificates] Generated front-proxy-client certificate and key.\n      [certificates] Generated etcd/ca certificate and key.\n      [certificates] Generated etcd/server certificate and key.\n      [certificates] etcd/server serving cert is signed for DNS names [master localhost] and IPs [127.0.0.1 ::1]\n      [certificates] Generated etcd/peer certificate and key.\n      [certificates] etcd/peer serving cert is signed for DNS names [master localhost] and IPs [192.168.0.8 127.0.0.1 ::1]\n      [certificates] Generated etcd/healthcheck-client certificate and key.\n      [certificates] Generated apiserver-etcd-client certificate and key.\n      [certificates] valid certificates and keys now exist in \"/etc/kubernetes/pki\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/admin.conf\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/controller-manager.conf\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/scheduler.conf\"\n      [controlplane] wrote Static Pod manifest for component kube-apiserver to \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n      [controlplane] wrote Static Pod manifest for component kube-controller-manager to \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n      [controlplane] wrote Static Pod manifest for component kube-scheduler to \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n      [etcd] Wrote Static Pod manifest for a local etcd instance to \"/etc/kubernetes/manifests/etcd.yaml\"\n      [init] waiting for the kubelet to boot up the control plane as Static Pods from directory \"/etc/kubernetes/manifests\"\n      [init] this might take a minute or longer if the control plane images have to be pulled\n      [apiclient] All control plane components are healthy after 49.502361 seconds\n      [uploadconfig] storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n      [kubelet] Creating a ConfigMap \"kubelet-config-1.11\" in namespace kube-system with the configuration for the kubelets in the cluster\n      [markmaster] Marking the node master as master by adding the label \"node-role.kubernetes.io/master=''\"\n      [markmaster] Marking the node master as master by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n      [patchnode] Uploading the CRI Socket information \"/var/run/dockershim.sock\" to the Node API object \"master\" as an annotation\n      [bootstraptoken] using token: 3resfo.cam2tnjxw0tastur\n      [bootstraptoken] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n      [bootstraptoken] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n      [bootstraptoken] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n      [bootstraptoken] creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n      [addons] Applied essential addon: CoreDNS\n      [addons] Applied essential addon: kube-proxy\n\n      Your Kubernetes master has initialized successfully!\n\n      To start using your cluster, you need to run the following as a regular user:\n\n        mkdir -p $HOME/.kube\n        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n        sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n      You should now deploy a pod network to the cluster.\n      Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n        https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\n      You can now join any number of machines by running the following on each node\n      as root:\n\n        kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n设置config\n      mkdir -p $HOME/.kube\n      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n      sudo chown $(id -u):$(id -g) $HOME/.kube/config\n 安装flannel，中间的版本号换为master即为最新版。\n      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml\n\n 安装完network之后，你可以通过kubectl get pods --all-namespaces来查看kube-dns是否在running来判断network是否安装成功。\n### 五、将node加入集群\n 1、配置kubelet\n 从master将kubelet文件分别复制到node01、node02\n      scp /etc/sysconfig/kubelet node01:/etc/sysconfig/kubelet\n      scp /etc/sysconfig/kubelet node02:/etc/sysconfig/kubelet\n 2、执行 kubeadm join的命令即可：\n      kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n### 六、测试\n\t\tkubectl get nodes\n集群部署成功\n### 七、初始化集群报错及问题解决：\n问题一：\n      [kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.\n      unable to fetch release information. URL: \"https://storage.googleapis.com/kubernetes-release/release/stable-1.7.5.txt\" Status: 404 Not Found\n 解决：\n      添加版本信息“--kubernetes-version=v1.7.5”，kubeadm reset，再次执行init\n问题二：\n      W1205 18:49:21.323220  106548 cni.go:189] Unable to update cni config: No networks found in /etc/cni/net.d\n      Container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized\n 解决：\n修改文件内容： \n\t\t/etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n        Environment=\"KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-\t\t  dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin\"\n 问题三：\n      k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:46: Failed to list *v1.Pod: Get https://192.168.0.8:6443/api/v1/pods?fieldSelector=spec.nodeName%3Dk8s-master&resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n      k8s.io/kubernetes/pkg/kubelet/kubelet.go:400: Failed to list *v1.Service: Get https://192.168.0.8:6443/api/v1/services?resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n      k8s.io/kubernetes/pkg/kubelet/kubelet.go:408: Failed to list *v1.Node: Get https://192.168.0.8:6443/api/v1/nodes?fieldSelector=metadata.name%3Dk8s-master&resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n      Unable to write event: 'Post https://192.168.0.8:6443/api/v1/namespaces/kube-system/events: dial tcp 192.168.0.8:6443: getsockopt: connection refused' (may retry after sleeping)\n      Failed to get status for pod \"etcd-k8s-master_kube-system(5802ae0664772d031dee332b3c63498e)\": Get https://192.168.0.8:6443/api/v1/namespaces/kube-system/pods/etcd-k8s-master: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n解决：打开防火墙\n\t\tsystemctl start firewalld\n添加火墙规则：\n      firewall-cmd --zone=public --add-port=80/tcp --permanent\n      firewall-cmd --zone=public --add-port=6443/tcp --permanent\n      firewall-cmd --zone=public --add-port=2379-2380/tcp --permanent\n      firewall-cmd --zone=public --add-port=10250-10255/tcp --permanent\n      firewall-cmd --zone=public --add-port=30000-32767/tcp --permanent\n      firewall-cmd --reload\n      firewall-cmd --zone=public --list-ports\n问题四：\n      [root@master]# kubectl get node\n      Unable to connect to the server: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")\n解决：\n      [root@master]# mv  $HOME/.kube $HOME/.kube.bak\n      [root@mster]# mkdir -p $HOME/.kube\n      [root@master]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n      [root@master]# chown $(id -u):$(id -g) $HOME/.kube/config\n### 八、安装kubernetes-dashboard\n1、下载kubernetes-dashboard.yaml\n      wget https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml\n2、编辑kubernetes-dashboard.yaml\n    添加type: Nodeport 和nodePort: 30001，将146行的serviceAccountName: kubernetes-dashboard改为serviceAccountName: kubernetes-dashboard-admin\nkubernetes-dashboard.yaml内容如下：\n        # Copyright 2017 The Kubernetes Authors.\n        #\n        # Licensed under the Apache License, Version 2.0 (the \"License\");\n        # you may not use this file except in compliance with the License.\n        # You may obtain a copy of the License at\n        #\n        #     http://www.apache.org/licenses/LICENSE-2.0\n        #\n        # Unless required by applicable law or agreed to in writing, software\n        # distributed under the License is distributed on an \"AS IS\" BASIS,\n        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        # See the License for the specific language governing permissions and\n        # limitations under the License.\n\n        # Configuration to deploy release version of the Dashboard UI compatible with\n        # Kubernetes 1.8.\n        #\n        # Example usage: kubectl create -f <this_file>\n\n        # ------------------- Dashboard Secret ------------------- #\n\n        apiVersion: v1\n        kind: Secret\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard-certs\n          namespace: kube-system\n        type: Opaque\n\n        ---\n        # ------------------- Dashboard Service Account ------------------- #\n\n        apiVersion: v1\n        kind: ServiceAccount\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard\n          namespace: kube-system\n\n        ---\n        # ------------------- Dashboard Role & Role Binding ------------------- #\n\n        kind: Role\n        apiVersion: rbac.authorization.k8s.io/v1\n        metadata:\n          name: kubernetes-dashboard-minimal\n          namespace: kube-system\n        rules:\n          # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.\n        - apiGroups: [\"\"]\n          resources: [\"secrets\"]\n          verbs: [\"create\"]\n          # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.\n        - apiGroups: [\"\"]\n          resources: [\"configmaps\"]\n          verbs: [\"create\"]\n          # Allow Dashboard to get, update and delete Dashboard exclusive secrets.\n        - apiGroups: [\"\"]\n          resources: [\"secrets\"]\n          resourceNames: [\"kubernetes-dashboard-key-holder\", \"kubernetes-dashboard-certs\"]\n          verbs: [\"get\", \"update\", \"delete\"]\n          # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.\n        - apiGroups: [\"\"]\n          resources: [\"configmaps\"]\n          resourceNames: [\"kubernetes-dashboard-settings\"]\n          verbs: [\"get\", \"update\"]\n          # Allow Dashboard to get metrics from heapster.\n        - apiGroups: [\"\"]\n          resources: [\"services\"]\n          resourceNames: [\"heapster\"]\n          verbs: [\"proxy\"]\n        - apiGroups: [\"\"]\n          resources: [\"services/proxy\"]\n          resourceNames: [\"heapster\", \"http:heapster:\", \"https:heapster:\"]\n          verbs: [\"get\"]\n\n        ---\n        apiVersion: rbac.authorization.k8s.io/v1\n        kind: RoleBinding\n        metadata:\n          name: kubernetes-dashboard-minimal\n          namespace: kube-system\n        roleRef:\n          apiGroup: rbac.authorization.k8s.io\n          kind: Role\n          name: kubernetes-dashboard-minimal\n        subjects:\n        - kind: ServiceAccount\n          name: kubernetes-dashboard\n          namespace: kube-system\n\n        ---\n        # ------------------- Dashboard Deployment ------------------- #\n\n        kind: Deployment\n        apiVersion: apps/v1beta2\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard\n          namespace: kube-system\n        spec:\n          replicas: 1\n          revisionHistoryLimit: 10\n          selector:\n            matchLabels:\n              k8s-app: kubernetes-dashboard\n          template:\n            metadata:\n              labels:\n                k8s-app: kubernetes-dashboard\n            spec:\n              containers:\n              - name: kubernetes-dashboard\n                image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3\n                ports:\n                - containerPort: 8443\n                  protocol: TCP\n                args:\n                  - --auto-generate-certificates\n                  # Uncomment the following line to manually specify Kubernetes API server Host\n                  # If not specified, Dashboard will attempt to auto discover the API server and connect\n                  # to it. Uncomment only if the default does not work.\n                  # - --apiserver-host=http://my-address:port\n                volumeMounts:\n                - name: kubernetes-dashboard-certs\n                  mountPath: /certs\n                  # Create on-disk volume to store exec logs\n                - mountPath: /tmp\n                  name: tmp-volume\n                livenessProbe:\n                  httpGet:\n                    scheme: HTTPS\n                    path: /\n                    port: 8443\n                  initialDelaySeconds: 30\n                  timeoutSeconds: 30\n              volumes:\n              - name: kubernetes-dashboard-certs\n                secret:\n                  secretName: kubernetes-dashboard-certs\n              - name: tmp-volume\n                emptyDir: {}\n              serviceAccountName: kubernetes-dashboard-admin\n              #不改的话有坑\n              # Comment the following tolerations if Dashboard must not be deployed on master\n              tolerations:\n              - key: node-role.kubernetes.io/master\n                effect: NoSchedule\n\n        ---\n        # ------------------- Dashboard Service ------------------- #\n\n        kind: Service\n        apiVersion: v1\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard\n          namespace: kube-system\n        spec:\n          type: NodePort\n          ports:\n            - port: 443\n              targetPort: 8443\n              nodePort: 30001\n          selector:\n            k8s-app: kubernetes-dashboard\n3、安装dashboard\n\t\tkubectl apply -f kubernetes-dashboard.yaml\n\n  如果不授予权限就会报错。\n  \n 4、授予dashboard账户集群管理权限，新建vi kubernetes-dashboard-admin.rbac.yaml\n      apiVersion: v1\n      kind: ServiceAccount\n      metadata:\n        labels:\n          k8s-app: kubernetes-dashboard\n        name: kubernetes-dashboard-admin\n        namespace: kube-system\n      ---\n      apiVersion: rbac.authorization.k8s.io/v1beta1\n      kind: ClusterRoleBinding\n      metadata:\n        name: kubernetes-dashboard-admin\n        labels:\n          k8s-app: kubernetes-dashboard\n      roleRef:\n        apiGroup: rbac.authorization.k8s.io\n        kind: ClusterRole\n        name: cluster-admin\n      subjects:\n      - kind: ServiceAccount\n        name: kubernetes-dashboard-admin\n        namespace: kube-system\n授予权限\n\t\tkubectl apply -f  kubernetes-dashboard-admin.rbac.yaml\n6、访问dashboard\n\t\thttps://192.168.0.10:30001\n7、获取token令牌的方式访问\n获取token\n      [root@master ~]# kubectl -n kube-system get secret | grep kubernetes-dashboard-admin|awk '{print \"secret/\"$1}'|xargs kubectl describe -n kube-system|grep token:|awk -F : '{print $2}'|xargs echo\n      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbi10b2tlbi1qYnRrZyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImYzZTY2NjBhLWE4NTgtMTFlOC1iNTI2LTAwMGMyOWU2ZTA4MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiJ9.CcgvvsCEkwKi0nhq-cnm-rDmLiBSclnK3H3cTugUpawvS2ruBl05jVpwPyh3pNc4Z_V5GPelTa7tsVJHDQ2uG1P7HYqKkcvtFnua9y5DAFMqtOf-sxiHSDjIkphXDKCxRVaGXQzv9bTC-MAT0NnJzK08w8lZlITWDuT_GQQHcczCOVknFnwVFDEzQKR0DLc9Bx2Gw-5TINidjhVHIWmUMhfEZE5F1D_kvBHRS6bgE43h0OsoPqs3BeCzxRTCbdbeDb9wIVcBxoi9QF9pE5k5dyuNOylRP2SLiHrK8nuCZSESZkRSDkC_3M2ax_2yfnBGi1cwH1A4JAgcMr7iIIBKAg\n将令牌复制登录即可\n","source":"_posts/kubeadm安装Kubernetes1-11集群-1.md","raw":"title: kubeadm安装Kubernetes1.11集群\nauthor: 汪菲宇\ntags:\n  - kubernetes\ncategories:\n  - 容器云\ndate: 2018-09-01 08:43:00\n---\n- 集群环境\n      主机名称 \tIP \t备注 \t操作系统\n      master \t192.168.0.8 \tdocker、kubectl、kubelet、kubeadm、flannel \tcentos7.3\n      node01 \t192.168.0.9 \tdocker、kubectl、kubelet、kubeadm \tcentos7.3\n      node02 \t192.168.0.10 \tdocker、kubectl、kubelet、kubeadm \tcentos7.3\n\n- 软件版本\n      kubernetes：1.11.2\n      docker-ce：18.06.1-ce\n      flennal：master\n### 一、环境初始化\n\n 1、分别在各节点设置主机名称\n      hostnamectl set-hostname master\n      hostnamectl set-hostname node01\n      hostnamectl set-hostname node02\n 2、配置主机映射(各节点都需要)\n       cat <<EOF > /etc/hosts\n       127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n       ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n       192.168.0.8 master\n       192.168.0.9 node01\n       192.168.0.10 node02\n       EOF\n 3、关闭防火墙\n\t\tsystemctl stop firewalld &&  systemctl disable firewalld\n 4、关闭Selinux\n      setenforce  0 #临时禁用selinux\n      sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/sysconfig/selinux  #永久关闭 修改/etc/sysconfig/selinux文件设置\n      sed -i \"s/^SELINUX=enforcing/SELINUX=disabled/g\" /etc/selinux/config\n 5、关闭Swap，否则kubelet会出错！\n      swapoff -a #临时关闭swap\n      sed -i 's/.*swap.*/#&/' /etc/fstab #永久关闭 注释/etc/fstab文件里swap相关的行\n 6、配置路由 \n      cat <<EOF >  /etc/sysctl.d/k8s.conf\n      net.bridge.bridge-nf-call-ip6tables = 1\n      net.bridge.bridge-nf-call-iptables = 1\n      EOF\n使其立刻生效 \n  \tsysctl --system\n  \n 或执行\n\t\tsysctl -p /etc/sysctl.d/k8s.conf生效\n 7、安装依赖包配置ntp\n      yum install -y epel-release\n      yum install -y yum-utils device-mapper-persistent-data lvm2 net-tools conntrack-tools wget vim  ntpdate libseccomp libtool-ltdl\n      systemctl enable ntpdate.service\n      echo '*/30 * * * * /usr/sbin/ntpdate time7.aliyun.com >/dev/null 2>&1' > /tmp/crontab2.tmp\n      crontab /tmp/crontab2.tmp\n      systemctl start ntpdate.service\n8、添加kubernetes的yum源\n      cat <<EOF > /etc/yum.repos.d/kubernetes.repo\n      [kubernetes]\n      name=Kubernetes\n      baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\n      enabled=1\n      gpgcheck=1\n      repo_gpgcheck=1\n      gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\n      EOF\n9、设置内核（可不设置）\n      echo \"* soft nofile 65536\" >> /etc/security/limits.conf\n      echo \"* hard nofile 65536\" >> /etc/security/limits.conf\n      echo \"* soft nproc 65536\"  >> /etc/security/limits.conf\n      echo \"* hard nproc 65536\"  >> /etc/security/limits.conf\n      echo \"* soft  memlock  unlimited\"  >> /etc/security/limits.conf\n      echo \"* hard memlock  unlimited\"  >> /etc/security/limits.conf\n\n  自己写的一个初始化脚本[config.sh](https://github.com/fungitive/Shell-script/blob/master/kubeadm-k8s-config.sh) ，可以提高初始化效率。\n### 二、安装与配置docker\n 1、安装docker\n  参照[《Centos7安装Docker最新版》](https://blog.csdn.net/bbwangj/article/details/76040122)  \n  2、配置docker镜像下载代理 \n      \tvi /usr/lib/systemd/system/docker.service的ExecStart前加入一行\n          Environment=\"HTTPS_PROXY=http://ik8s.io:10080\"\n          Environment=\"NO_PROXY=127.0.0.0/8,172.20.0.0/16\"\n 3、重启docker\n\t\tsystemctl daemon-reload && systemctl restart docker\n### 三、安装与配置kubeadm, kubelet和kubectl\n 1、安装kubeadm, kubelet和kubectl\n\t\tyum install -y kubelet kubeadm kubectl\n2、配置kubeadm\n      vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf修改如下\n      Environment=\"KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin\"\n      systemctl enable kubelet && systemctl start kubelet\n4: 命令补全\n      yum install -y bash-completion\n      source /usr/share/bash-completion/bash_completion\n      source <(kubectl completion bash)\n      echo \"source <(kubectl completion bash)\" >> ~/.bashrc\n### 四、使用kubeadm初始化master\n 初始化的时候指定一下kubernetes版本，并设置一下pod-network-cidr（后面的flannel会用到）：\n\t\t$ kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n\n      [root@master]# kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n      [init] using Kubernetes version: v1.11.2\n      [preflight] running pre-flight checks\n      I0825 11:41:52.394205    5611 kernel_validator.go:81] Validating kernel version\n      I0825 11:41:52.394466    5611 kernel_validator.go:96] Validating kernel config\n      [preflight/images] Pulling images required for setting up a Kubernetes cluster\n      [preflight/images] This might take a minute or two, depending on the speed of your internet connection\n      [preflight/images] You can also perform this action in beforehand using 'kubeadm config images pull'\n      [kubelet] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n      [kubelet] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n      [preflight] Activating the kubelet service\n      [certificates] Generated ca certificate and key.\n      [certificates] Generated apiserver certificate and key.\n      [certificates] apiserver serving cert is signed for DNS names [master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.0.8]\n      [certificates] Generated apiserver-kubelet-client certificate and key.\n      [certificates] Generated sa key and public key.\n      [certificates] Generated front-proxy-ca certificate and key.\n      [certificates] Generated front-proxy-client certificate and key.\n      [certificates] Generated etcd/ca certificate and key.\n      [certificates] Generated etcd/server certificate and key.\n      [certificates] etcd/server serving cert is signed for DNS names [master localhost] and IPs [127.0.0.1 ::1]\n      [certificates] Generated etcd/peer certificate and key.\n      [certificates] etcd/peer serving cert is signed for DNS names [master localhost] and IPs [192.168.0.8 127.0.0.1 ::1]\n      [certificates] Generated etcd/healthcheck-client certificate and key.\n      [certificates] Generated apiserver-etcd-client certificate and key.\n      [certificates] valid certificates and keys now exist in \"/etc/kubernetes/pki\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/admin.conf\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/kubelet.conf\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/controller-manager.conf\"\n      [kubeconfig] Wrote KubeConfig file to disk: \"/etc/kubernetes/scheduler.conf\"\n      [controlplane] wrote Static Pod manifest for component kube-apiserver to \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n      [controlplane] wrote Static Pod manifest for component kube-controller-manager to \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n      [controlplane] wrote Static Pod manifest for component kube-scheduler to \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n      [etcd] Wrote Static Pod manifest for a local etcd instance to \"/etc/kubernetes/manifests/etcd.yaml\"\n      [init] waiting for the kubelet to boot up the control plane as Static Pods from directory \"/etc/kubernetes/manifests\"\n      [init] this might take a minute or longer if the control plane images have to be pulled\n      [apiclient] All control plane components are healthy after 49.502361 seconds\n      [uploadconfig] storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n      [kubelet] Creating a ConfigMap \"kubelet-config-1.11\" in namespace kube-system with the configuration for the kubelets in the cluster\n      [markmaster] Marking the node master as master by adding the label \"node-role.kubernetes.io/master=''\"\n      [markmaster] Marking the node master as master by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n      [patchnode] Uploading the CRI Socket information \"/var/run/dockershim.sock\" to the Node API object \"master\" as an annotation\n      [bootstraptoken] using token: 3resfo.cam2tnjxw0tastur\n      [bootstraptoken] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n      [bootstraptoken] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n      [bootstraptoken] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n      [bootstraptoken] creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n      [addons] Applied essential addon: CoreDNS\n      [addons] Applied essential addon: kube-proxy\n\n      Your Kubernetes master has initialized successfully!\n\n      To start using your cluster, you need to run the following as a regular user:\n\n        mkdir -p $HOME/.kube\n        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n        sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n      You should now deploy a pod network to the cluster.\n      Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n        https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\n      You can now join any number of machines by running the following on each node\n      as root:\n\n        kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n设置config\n      mkdir -p $HOME/.kube\n      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n      sudo chown $(id -u):$(id -g) $HOME/.kube/config\n 安装flannel，中间的版本号换为master即为最新版。\n      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml\n\n 安装完network之后，你可以通过kubectl get pods --all-namespaces来查看kube-dns是否在running来判断network是否安装成功。\n### 五、将node加入集群\n 1、配置kubelet\n 从master将kubelet文件分别复制到node01、node02\n      scp /etc/sysconfig/kubelet node01:/etc/sysconfig/kubelet\n      scp /etc/sysconfig/kubelet node02:/etc/sysconfig/kubelet\n 2、执行 kubeadm join的命令即可：\n      kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n### 六、测试\n\t\tkubectl get nodes\n集群部署成功\n### 七、初始化集群报错及问题解决：\n问题一：\n      [kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.\n      unable to fetch release information. URL: \"https://storage.googleapis.com/kubernetes-release/release/stable-1.7.5.txt\" Status: 404 Not Found\n 解决：\n      添加版本信息“--kubernetes-version=v1.7.5”，kubeadm reset，再次执行init\n问题二：\n      W1205 18:49:21.323220  106548 cni.go:189] Unable to update cni config: No networks found in /etc/cni/net.d\n      Container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized\n 解决：\n修改文件内容： \n\t\t/etc/systemd/system/kubelet.service.d/10-kubeadm.conf\n        Environment=\"KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-\t\t  dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin\"\n 问题三：\n      k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:46: Failed to list *v1.Pod: Get https://192.168.0.8:6443/api/v1/pods?fieldSelector=spec.nodeName%3Dk8s-master&resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n      k8s.io/kubernetes/pkg/kubelet/kubelet.go:400: Failed to list *v1.Service: Get https://192.168.0.8:6443/api/v1/services?resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n      k8s.io/kubernetes/pkg/kubelet/kubelet.go:408: Failed to list *v1.Node: Get https://192.168.0.8:6443/api/v1/nodes?fieldSelector=metadata.name%3Dk8s-master&resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n      Unable to write event: 'Post https://192.168.0.8:6443/api/v1/namespaces/kube-system/events: dial tcp 192.168.0.8:6443: getsockopt: connection refused' (may retry after sleeping)\n      Failed to get status for pod \"etcd-k8s-master_kube-system(5802ae0664772d031dee332b3c63498e)\": Get https://192.168.0.8:6443/api/v1/namespaces/kube-system/pods/etcd-k8s-master: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n解决：打开防火墙\n\t\tsystemctl start firewalld\n添加火墙规则：\n      firewall-cmd --zone=public --add-port=80/tcp --permanent\n      firewall-cmd --zone=public --add-port=6443/tcp --permanent\n      firewall-cmd --zone=public --add-port=2379-2380/tcp --permanent\n      firewall-cmd --zone=public --add-port=10250-10255/tcp --permanent\n      firewall-cmd --zone=public --add-port=30000-32767/tcp --permanent\n      firewall-cmd --reload\n      firewall-cmd --zone=public --list-ports\n问题四：\n      [root@master]# kubectl get node\n      Unable to connect to the server: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")\n解决：\n      [root@master]# mv  $HOME/.kube $HOME/.kube.bak\n      [root@mster]# mkdir -p $HOME/.kube\n      [root@master]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n      [root@master]# chown $(id -u):$(id -g) $HOME/.kube/config\n### 八、安装kubernetes-dashboard\n1、下载kubernetes-dashboard.yaml\n      wget https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml\n2、编辑kubernetes-dashboard.yaml\n    添加type: Nodeport 和nodePort: 30001，将146行的serviceAccountName: kubernetes-dashboard改为serviceAccountName: kubernetes-dashboard-admin\nkubernetes-dashboard.yaml内容如下：\n        # Copyright 2017 The Kubernetes Authors.\n        #\n        # Licensed under the Apache License, Version 2.0 (the \"License\");\n        # you may not use this file except in compliance with the License.\n        # You may obtain a copy of the License at\n        #\n        #     http://www.apache.org/licenses/LICENSE-2.0\n        #\n        # Unless required by applicable law or agreed to in writing, software\n        # distributed under the License is distributed on an \"AS IS\" BASIS,\n        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        # See the License for the specific language governing permissions and\n        # limitations under the License.\n\n        # Configuration to deploy release version of the Dashboard UI compatible with\n        # Kubernetes 1.8.\n        #\n        # Example usage: kubectl create -f <this_file>\n\n        # ------------------- Dashboard Secret ------------------- #\n\n        apiVersion: v1\n        kind: Secret\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard-certs\n          namespace: kube-system\n        type: Opaque\n\n        ---\n        # ------------------- Dashboard Service Account ------------------- #\n\n        apiVersion: v1\n        kind: ServiceAccount\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard\n          namespace: kube-system\n\n        ---\n        # ------------------- Dashboard Role & Role Binding ------------------- #\n\n        kind: Role\n        apiVersion: rbac.authorization.k8s.io/v1\n        metadata:\n          name: kubernetes-dashboard-minimal\n          namespace: kube-system\n        rules:\n          # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.\n        - apiGroups: [\"\"]\n          resources: [\"secrets\"]\n          verbs: [\"create\"]\n          # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.\n        - apiGroups: [\"\"]\n          resources: [\"configmaps\"]\n          verbs: [\"create\"]\n          # Allow Dashboard to get, update and delete Dashboard exclusive secrets.\n        - apiGroups: [\"\"]\n          resources: [\"secrets\"]\n          resourceNames: [\"kubernetes-dashboard-key-holder\", \"kubernetes-dashboard-certs\"]\n          verbs: [\"get\", \"update\", \"delete\"]\n          # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.\n        - apiGroups: [\"\"]\n          resources: [\"configmaps\"]\n          resourceNames: [\"kubernetes-dashboard-settings\"]\n          verbs: [\"get\", \"update\"]\n          # Allow Dashboard to get metrics from heapster.\n        - apiGroups: [\"\"]\n          resources: [\"services\"]\n          resourceNames: [\"heapster\"]\n          verbs: [\"proxy\"]\n        - apiGroups: [\"\"]\n          resources: [\"services/proxy\"]\n          resourceNames: [\"heapster\", \"http:heapster:\", \"https:heapster:\"]\n          verbs: [\"get\"]\n\n        ---\n        apiVersion: rbac.authorization.k8s.io/v1\n        kind: RoleBinding\n        metadata:\n          name: kubernetes-dashboard-minimal\n          namespace: kube-system\n        roleRef:\n          apiGroup: rbac.authorization.k8s.io\n          kind: Role\n          name: kubernetes-dashboard-minimal\n        subjects:\n        - kind: ServiceAccount\n          name: kubernetes-dashboard\n          namespace: kube-system\n\n        ---\n        # ------------------- Dashboard Deployment ------------------- #\n\n        kind: Deployment\n        apiVersion: apps/v1beta2\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard\n          namespace: kube-system\n        spec:\n          replicas: 1\n          revisionHistoryLimit: 10\n          selector:\n            matchLabels:\n              k8s-app: kubernetes-dashboard\n          template:\n            metadata:\n              labels:\n                k8s-app: kubernetes-dashboard\n            spec:\n              containers:\n              - name: kubernetes-dashboard\n                image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3\n                ports:\n                - containerPort: 8443\n                  protocol: TCP\n                args:\n                  - --auto-generate-certificates\n                  # Uncomment the following line to manually specify Kubernetes API server Host\n                  # If not specified, Dashboard will attempt to auto discover the API server and connect\n                  # to it. Uncomment only if the default does not work.\n                  # - --apiserver-host=http://my-address:port\n                volumeMounts:\n                - name: kubernetes-dashboard-certs\n                  mountPath: /certs\n                  # Create on-disk volume to store exec logs\n                - mountPath: /tmp\n                  name: tmp-volume\n                livenessProbe:\n                  httpGet:\n                    scheme: HTTPS\n                    path: /\n                    port: 8443\n                  initialDelaySeconds: 30\n                  timeoutSeconds: 30\n              volumes:\n              - name: kubernetes-dashboard-certs\n                secret:\n                  secretName: kubernetes-dashboard-certs\n              - name: tmp-volume\n                emptyDir: {}\n              serviceAccountName: kubernetes-dashboard-admin\n              #不改的话有坑\n              # Comment the following tolerations if Dashboard must not be deployed on master\n              tolerations:\n              - key: node-role.kubernetes.io/master\n                effect: NoSchedule\n\n        ---\n        # ------------------- Dashboard Service ------------------- #\n\n        kind: Service\n        apiVersion: v1\n        metadata:\n          labels:\n            k8s-app: kubernetes-dashboard\n          name: kubernetes-dashboard\n          namespace: kube-system\n        spec:\n          type: NodePort\n          ports:\n            - port: 443\n              targetPort: 8443\n              nodePort: 30001\n          selector:\n            k8s-app: kubernetes-dashboard\n3、安装dashboard\n\t\tkubectl apply -f kubernetes-dashboard.yaml\n\n  如果不授予权限就会报错。\n  \n 4、授予dashboard账户集群管理权限，新建vi kubernetes-dashboard-admin.rbac.yaml\n      apiVersion: v1\n      kind: ServiceAccount\n      metadata:\n        labels:\n          k8s-app: kubernetes-dashboard\n        name: kubernetes-dashboard-admin\n        namespace: kube-system\n      ---\n      apiVersion: rbac.authorization.k8s.io/v1beta1\n      kind: ClusterRoleBinding\n      metadata:\n        name: kubernetes-dashboard-admin\n        labels:\n          k8s-app: kubernetes-dashboard\n      roleRef:\n        apiGroup: rbac.authorization.k8s.io\n        kind: ClusterRole\n        name: cluster-admin\n      subjects:\n      - kind: ServiceAccount\n        name: kubernetes-dashboard-admin\n        namespace: kube-system\n授予权限\n\t\tkubectl apply -f  kubernetes-dashboard-admin.rbac.yaml\n6、访问dashboard\n\t\thttps://192.168.0.10:30001\n7、获取token令牌的方式访问\n获取token\n      [root@master ~]# kubectl -n kube-system get secret | grep kubernetes-dashboard-admin|awk '{print \"secret/\"$1}'|xargs kubectl describe -n kube-system|grep token:|awk -F : '{print $2}'|xargs echo\n      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbi10b2tlbi1qYnRrZyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImYzZTY2NjBhLWE4NTgtMTFlOC1iNTI2LTAwMGMyOWU2ZTA4MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiJ9.CcgvvsCEkwKi0nhq-cnm-rDmLiBSclnK3H3cTugUpawvS2ruBl05jVpwPyh3pNc4Z_V5GPelTa7tsVJHDQ2uG1P7HYqKkcvtFnua9y5DAFMqtOf-sxiHSDjIkphXDKCxRVaGXQzv9bTC-MAT0NnJzK08w8lZlITWDuT_GQQHcczCOVknFnwVFDEzQKR0DLc9Bx2Gw-5TINidjhVHIWmUMhfEZE5F1D_kvBHRS6bgE43h0OsoPqs3BeCzxRTCbdbeDb9wIVcBxoi9QF9pE5k5dyuNOylRP2SLiHrK8nuCZSESZkRSDkC_3M2ax_2yfnBGi1cwH1A4JAgcMr7iIIBKAg\n将令牌复制登录即可\n","slug":"kubeadm安装Kubernetes1-11集群-1","published":1,"updated":"2018-09-01T09:29:56.994Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlj9dkca000nwnpe6392ua13","content":"<ul>\n<li><p>集群环境</p>\n<pre><code>主机名称     IP     备注     操作系统\nmaster     192.168.0.8     docker、kubectl、kubelet、kubeadm、flannel     centos7.3\nnode01     192.168.0.9     docker、kubectl、kubelet、kubeadm     centos7.3\nnode02     192.168.0.10     docker、kubectl、kubelet、kubeadm     centos7.3\n</code></pre></li>\n<li><p>软件版本</p>\n<pre><code>kubernetes：1.11.2\ndocker-ce：18.06.1-ce\nflennal：master\n</code></pre><h3 id=\"一、环境初始化\"><a href=\"#一、环境初始化\" class=\"headerlink\" title=\"一、环境初始化\"></a>一、环境初始化</h3><p>1、分别在各节点设置主机名称</p>\n<pre><code>hostnamectl set-hostname master\nhostnamectl set-hostname node01\nhostnamectl set-hostname node02\n</code></pre><p>2、配置主机映射(各节点都需要)</p>\n<pre><code>cat &lt;&lt;EOF &gt; /etc/hosts\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.0.8 master\n192.168.0.9 node01\n192.168.0.10 node02\nEOF\n</code></pre><p>3、关闭防火墙</p>\n<pre><code>systemctl stop firewalld &amp;&amp;  systemctl disable firewalld\n</code></pre><p>4、关闭Selinux</p>\n<pre><code>setenforce  0 #临时禁用selinux\nsed -i &quot;s/^SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/sysconfig/selinux  #永久关闭 修改/etc/sysconfig/selinux文件设置\nsed -i &quot;s/^SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config\n</code></pre><p>5、关闭Swap，否则kubelet会出错！</p>\n<pre><code>swapoff -a #临时关闭swap\nsed -i &apos;s/.*swap.*/#&amp;/&apos; /etc/fstab #永久关闭 注释/etc/fstab文件里swap相关的行\n</code></pre><p>6、配置路由 </p>\n<pre><code>cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\n</code></pre><p>使其立刻生效 </p>\n<pre><code>sysctl --system\n</code></pre><p>或执行</p>\n<pre><code>sysctl -p /etc/sysctl.d/k8s.conf生效\n</code></pre><p>7、安装依赖包配置ntp</p>\n<pre><code>yum install -y epel-release\nyum install -y yum-utils device-mapper-persistent-data lvm2 net-tools conntrack-tools wget vim  ntpdate libseccomp libtool-ltdl\nsystemctl enable ntpdate.service\necho &apos;*/30 * * * * /usr/sbin/ntpdate time7.aliyun.com &gt;/dev/null 2&gt;&amp;1&apos; &gt; /tmp/crontab2.tmp\ncrontab /tmp/crontab2.tmp\nsystemctl start ntpdate.service\n</code></pre><p>8、添加kubernetes的yum源</p>\n<pre><code>cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n</code></pre><p>9、设置内核（可不设置）</p>\n<pre><code>echo &quot;* soft nofile 65536&quot; &gt;&gt; /etc/security/limits.conf\necho &quot;* hard nofile 65536&quot; &gt;&gt; /etc/security/limits.conf\necho &quot;* soft nproc 65536&quot;  &gt;&gt; /etc/security/limits.conf\necho &quot;* hard nproc 65536&quot;  &gt;&gt; /etc/security/limits.conf\necho &quot;* soft  memlock  unlimited&quot;  &gt;&gt; /etc/security/limits.conf\necho &quot;* hard memlock  unlimited&quot;  &gt;&gt; /etc/security/limits.conf\n</code></pre><p>自己写的一个初始化脚本<a href=\"https://github.com/fungitive/Shell-script/blob/master/kubeadm-k8s-config.sh\" target=\"_blank\" rel=\"noopener\">config.sh</a> ，可以提高初始化效率。</p>\n<h3 id=\"二、安装与配置docker\"><a href=\"#二、安装与配置docker\" class=\"headerlink\" title=\"二、安装与配置docker\"></a>二、安装与配置docker</h3><p>1、安装docker<br>参照<a href=\"https://blog.csdn.net/bbwangj/article/details/76040122\" target=\"_blank\" rel=\"noopener\">《Centos7安装Docker最新版》</a><br>2、配置docker镜像下载代理 </p>\n<pre><code>vi /usr/lib/systemd/system/docker.service的ExecStart前加入一行\nEnvironment=&quot;HTTPS_PROXY=http://ik8s.io:10080&quot;\nEnvironment=&quot;NO_PROXY=127.0.0.0/8,172.20.0.0/16&quot;\n</code></pre><p>3、重启docker</p>\n<pre><code>systemctl daemon-reload &amp;&amp; systemctl restart docker\n</code></pre><h3 id=\"三、安装与配置kubeadm-kubelet和kubectl\"><a href=\"#三、安装与配置kubeadm-kubelet和kubectl\" class=\"headerlink\" title=\"三、安装与配置kubeadm, kubelet和kubectl\"></a>三、安装与配置kubeadm, kubelet和kubectl</h3><p>1、安装kubeadm, kubelet和kubectl</p>\n<pre><code>yum install -y kubelet kubeadm kubectl\n</code></pre><p>2、配置kubeadm</p>\n<pre><code>vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf修改如下\nEnvironment=&quot;KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin&quot;\nsystemctl enable kubelet &amp;&amp; systemctl start kubelet\n</code></pre><p>4: 命令补全</p>\n<pre><code>yum install -y bash-completion\nsource /usr/share/bash-completion/bash_completion\nsource &lt;(kubectl completion bash)\necho &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bashrc\n</code></pre><h3 id=\"四、使用kubeadm初始化master\"><a href=\"#四、使用kubeadm初始化master\" class=\"headerlink\" title=\"四、使用kubeadm初始化master\"></a>四、使用kubeadm初始化master</h3><p>初始化的时候指定一下kubernetes版本，并设置一下pod-network-cidr（后面的flannel会用到）：</p>\n<pre><code>  $ kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n\n[root@master]# kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n[init] using Kubernetes version: v1.11.2\n[preflight] running pre-flight checks\nI0825 11:41:52.394205    5611 kernel_validator.go:81] Validating kernel version\nI0825 11:41:52.394466    5611 kernel_validator.go:96] Validating kernel config\n[preflight/images] Pulling images required for setting up a Kubernetes cluster\n[preflight/images] This might take a minute or two, depending on the speed of your internet connection\n[preflight/images] You can also perform this action in beforehand using &apos;kubeadm config images pull&apos;\n[kubelet] Writing kubelet environment file with flags to file &quot;/var/lib/kubelet/kubeadm-flags.env&quot;\n[kubelet] Writing kubelet configuration to file &quot;/var/lib/kubelet/config.yaml&quot;\n[preflight] Activating the kubelet service\n[certificates] Generated ca certificate and key.\n[certificates] Generated apiserver certificate and key.\n[certificates] apiserver serving cert is signed for DNS names [master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.0.8]\n[certificates] Generated apiserver-kubelet-client certificate and key.\n[certificates] Generated sa key and public key.\n[certificates] Generated front-proxy-ca certificate and key.\n[certificates] Generated front-proxy-client certificate and key.\n[certificates] Generated etcd/ca certificate and key.\n[certificates] Generated etcd/server certificate and key.\n[certificates] etcd/server serving cert is signed for DNS names [master localhost] and IPs [127.0.0.1 ::1]\n[certificates] Generated etcd/peer certificate and key.\n[certificates] etcd/peer serving cert is signed for DNS names [master localhost] and IPs [192.168.0.8 127.0.0.1 ::1]\n[certificates] Generated etcd/healthcheck-client certificate and key.\n[certificates] Generated apiserver-etcd-client certificate and key.\n[certificates] valid certificates and keys now exist in &quot;/etc/kubernetes/pki&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/admin.conf&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/kubelet.conf&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/controller-manager.conf&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/scheduler.conf&quot;\n[controlplane] wrote Static Pod manifest for component kube-apiserver to &quot;/etc/kubernetes/manifests/kube-apiserver.yaml&quot;\n[controlplane] wrote Static Pod manifest for component kube-controller-manager to &quot;/etc/kubernetes/manifests/kube-controller-manager.yaml&quot;\n[controlplane] wrote Static Pod manifest for component kube-scheduler to &quot;/etc/kubernetes/manifests/kube-scheduler.yaml&quot;\n[etcd] Wrote Static Pod manifest for a local etcd instance to &quot;/etc/kubernetes/manifests/etcd.yaml&quot;\n[init] waiting for the kubelet to boot up the control plane as Static Pods from directory &quot;/etc/kubernetes/manifests&quot;\n[init] this might take a minute or longer if the control plane images have to be pulled\n[apiclient] All control plane components are healthy after 49.502361 seconds\n[uploadconfig] storing the configuration used in ConfigMap &quot;kubeadm-config&quot; in the &quot;kube-system&quot; Namespace\n[kubelet] Creating a ConfigMap &quot;kubelet-config-1.11&quot; in namespace kube-system with the configuration for the kubelets in the cluster\n[markmaster] Marking the node master as master by adding the label &quot;node-role.kubernetes.io/master=&apos;&apos;&quot;\n[markmaster] Marking the node master as master by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n[patchnode] Uploading the CRI Socket information &quot;/var/run/dockershim.sock&quot; to the Node API object &quot;master&quot; as an annotation\n[bootstraptoken] using token: 3resfo.cam2tnjxw0tastur\n[bootstraptoken] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstraptoken] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstraptoken] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstraptoken] creating the &quot;cluster-info&quot; ConfigMap in the &quot;kube-public&quot; namespace\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes master has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of machines by running the following on each node\nas root:\n\n  kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n</code></pre><p>设置config</p>\n<pre><code>mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre><p>安装flannel，中间的版本号换为master即为最新版。</p>\n<pre><code>kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml\n</code></pre><p>安装完network之后，你可以通过kubectl get pods –all-namespaces来查看kube-dns是否在running来判断network是否安装成功。</p>\n<h3 id=\"五、将node加入集群\"><a href=\"#五、将node加入集群\" class=\"headerlink\" title=\"五、将node加入集群\"></a>五、将node加入集群</h3><p>1、配置kubelet<br>从master将kubelet文件分别复制到node01、node02</p>\n<pre><code>scp /etc/sysconfig/kubelet node01:/etc/sysconfig/kubelet\nscp /etc/sysconfig/kubelet node02:/etc/sysconfig/kubelet\n</code></pre><p>2、执行 kubeadm join的命令即可：</p>\n<pre><code>kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n</code></pre><h3 id=\"六、测试\"><a href=\"#六、测试\" class=\"headerlink\" title=\"六、测试\"></a>六、测试</h3><pre><code>kubectl get nodes\n</code></pre><p>集群部署成功</p>\n<h3 id=\"七、初始化集群报错及问题解决：\"><a href=\"#七、初始化集群报错及问题解决：\" class=\"headerlink\" title=\"七、初始化集群报错及问题解决：\"></a>七、初始化集群报错及问题解决：</h3><p>问题一：</p>\n<pre><code>[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.\nunable to fetch release information. URL: &quot;https://storage.googleapis.com/kubernetes-release/release/stable-1.7.5.txt&quot; Status: 404 Not Found\n</code></pre><p>解决：</p>\n<pre><code>添加版本信息“--kubernetes-version=v1.7.5”，kubeadm reset，再次执行init\n</code></pre><p>问题二：</p>\n<pre><code>W1205 18:49:21.323220  106548 cni.go:189] Unable to update cni config: No networks found in /etc/cni/net.d\nContainer runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized\n</code></pre><p>解决：<br>修改文件内容： </p>\n<pre><code>/etc/systemd/system/kubelet.service.d/10-kubeadm.conf\nEnvironment=&quot;KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-          dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin&quot;\n</code></pre><p>问题三：</p>\n<pre><code>k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:46: Failed to list *v1.Pod: Get https://192.168.0.8:6443/api/v1/pods?fieldSelector=spec.nodeName%3Dk8s-master&amp;resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\nk8s.io/kubernetes/pkg/kubelet/kubelet.go:400: Failed to list *v1.Service: Get https://192.168.0.8:6443/api/v1/services?resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\nk8s.io/kubernetes/pkg/kubelet/kubelet.go:408: Failed to list *v1.Node: Get https://192.168.0.8:6443/api/v1/nodes?fieldSelector=metadata.name%3Dk8s-master&amp;resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\nUnable to write event: &apos;Post https://192.168.0.8:6443/api/v1/namespaces/kube-system/events: dial tcp 192.168.0.8:6443: getsockopt: connection refused&apos; (may retry after sleeping)\nFailed to get status for pod &quot;etcd-k8s-master_kube-system(5802ae0664772d031dee332b3c63498e)&quot;: Get https://192.168.0.8:6443/api/v1/namespaces/kube-system/pods/etcd-k8s-master: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n</code></pre><p>解决：打开防火墙</p>\n<pre><code>systemctl start firewalld\n</code></pre><p>添加火墙规则：</p>\n<pre><code>firewall-cmd --zone=public --add-port=80/tcp --permanent\nfirewall-cmd --zone=public --add-port=6443/tcp --permanent\nfirewall-cmd --zone=public --add-port=2379-2380/tcp --permanent\nfirewall-cmd --zone=public --add-port=10250-10255/tcp --permanent\nfirewall-cmd --zone=public --add-port=30000-32767/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-ports\n</code></pre><p>问题四：</p>\n<pre><code>[root@master]# kubectl get node\nUnable to connect to the server: x509: certificate signed by unknown authority (possibly because of &quot;crypto/rsa: verification error&quot; while trying to verify candidate authority certificate &quot;kubernetes&quot;)\n</code></pre><p>解决：</p>\n<pre><code>[root@master]# mv  $HOME/.kube $HOME/.kube.bak\n[root@mster]# mkdir -p $HOME/.kube\n[root@master]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n[root@master]# chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre><h3 id=\"八、安装kubernetes-dashboard\"><a href=\"#八、安装kubernetes-dashboard\" class=\"headerlink\" title=\"八、安装kubernetes-dashboard\"></a>八、安装kubernetes-dashboard</h3><p>1、下载kubernetes-dashboard.yaml</p>\n<pre><code>wget https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml\n</code></pre><p>2、编辑kubernetes-dashboard.yaml<br>  添加type: Nodeport 和nodePort: 30001，将146行的serviceAccountName: kubernetes-dashboard改为serviceAccountName: kubernetes-dashboard-admin<br>kubernetes-dashboard.yaml内容如下：</p>\n<pre><code># Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.8.\n#\n# Example usage: kubectl create -f &lt;this_file&gt;\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role &amp; Role Binding ------------------- #\n\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nrules:\n  # Allow Dashboard to create &apos;kubernetes-dashboard-key-holder&apos; secret.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;secrets&quot;]\n  verbs: [&quot;create&quot;]\n  # Allow Dashboard to create &apos;kubernetes-dashboard-settings&apos; config map.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;configmaps&quot;]\n  verbs: [&quot;create&quot;]\n  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;secrets&quot;]\n  resourceNames: [&quot;kubernetes-dashboard-key-holder&quot;, &quot;kubernetes-dashboard-certs&quot;]\n  verbs: [&quot;get&quot;, &quot;update&quot;, &quot;delete&quot;]\n  # Allow Dashboard to get and update &apos;kubernetes-dashboard-settings&apos; config map.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;configmaps&quot;]\n  resourceNames: [&quot;kubernetes-dashboard-settings&quot;]\n  verbs: [&quot;get&quot;, &quot;update&quot;]\n  # Allow Dashboard to get metrics from heapster.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;services&quot;]\n  resourceNames: [&quot;heapster&quot;]\n  verbs: [&quot;proxy&quot;]\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;services/proxy&quot;]\n  resourceNames: [&quot;heapster&quot;, &quot;http:heapster:&quot;, &quot;https:heapster:&quot;]\n  verbs: [&quot;get&quot;]\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: kubernetes-dashboard-minimal\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n      - name: kubernetes-dashboard\n        image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3\n        ports:\n        - containerPort: 8443\n          protocol: TCP\n        args:\n          - --auto-generate-certificates\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http://my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n          # Create on-disk volume to store exec logs\n        - mountPath: /tmp\n          name: tmp-volume\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: /\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      - name: tmp-volume\n        emptyDir: {}\n      serviceAccountName: kubernetes-dashboard-admin\n      #不改的话有坑\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 30001\n  selector:\n    k8s-app: kubernetes-dashboard\n</code></pre><p>3、安装dashboard</p>\n<pre><code>kubectl apply -f kubernetes-dashboard.yaml\n</code></pre><p>如果不授予权限就会报错。</p>\n<p>4、授予dashboard账户集群管理权限，新建vi kubernetes-dashboard-admin.rbac.yaml</p>\n<pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-admin\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-dashboard-admin\n  labels:\n    k8s-app: kubernetes-dashboard\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard-admin\n  namespace: kube-system\n</code></pre><p>授予权限</p>\n<pre><code>kubectl apply -f  kubernetes-dashboard-admin.rbac.yaml\n</code></pre><p>6、访问dashboard</p>\n<pre><code>https://192.168.0.10:30001\n</code></pre><p>7、获取token令牌的方式访问<br>获取token</p>\n<pre><code>[root@master ~]# kubectl -n kube-system get secret | grep kubernetes-dashboard-admin|awk &apos;{print &quot;secret/&quot;$1}&apos;|xargs kubectl describe -n kube-system|grep token:|awk -F : &apos;{print $2}&apos;|xargs echo\neyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbi10b2tlbi1qYnRrZyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImYzZTY2NjBhLWE4NTgtMTFlOC1iNTI2LTAwMGMyOWU2ZTA4MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiJ9.CcgvvsCEkwKi0nhq-cnm-rDmLiBSclnK3H3cTugUpawvS2ruBl05jVpwPyh3pNc4Z_V5GPelTa7tsVJHDQ2uG1P7HYqKkcvtFnua9y5DAFMqtOf-sxiHSDjIkphXDKCxRVaGXQzv9bTC-MAT0NnJzK08w8lZlITWDuT_GQQHcczCOVknFnwVFDEzQKR0DLc9Bx2Gw-5TINidjhVHIWmUMhfEZE5F1D_kvBHRS6bgE43h0OsoPqs3BeCzxRTCbdbeDb9wIVcBxoi9QF9pE5k5dyuNOylRP2SLiHrK8nuCZSESZkRSDkC_3M2ax_2yfnBGi1cwH1A4JAgcMr7iIIBKAg\n</code></pre><p>将令牌复制登录即可</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><p>集群环境</p>\n<pre><code>主机名称     IP     备注     操作系统\nmaster     192.168.0.8     docker、kubectl、kubelet、kubeadm、flannel     centos7.3\nnode01     192.168.0.9     docker、kubectl、kubelet、kubeadm     centos7.3\nnode02     192.168.0.10     docker、kubectl、kubelet、kubeadm     centos7.3\n</code></pre></li>\n<li><p>软件版本</p>\n<pre><code>kubernetes：1.11.2\ndocker-ce：18.06.1-ce\nflennal：master\n</code></pre><h3 id=\"一、环境初始化\"><a href=\"#一、环境初始化\" class=\"headerlink\" title=\"一、环境初始化\"></a>一、环境初始化</h3><p>1、分别在各节点设置主机名称</p>\n<pre><code>hostnamectl set-hostname master\nhostnamectl set-hostname node01\nhostnamectl set-hostname node02\n</code></pre><p>2、配置主机映射(各节点都需要)</p>\n<pre><code>cat &lt;&lt;EOF &gt; /etc/hosts\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.0.8 master\n192.168.0.9 node01\n192.168.0.10 node02\nEOF\n</code></pre><p>3、关闭防火墙</p>\n<pre><code>systemctl stop firewalld &amp;&amp;  systemctl disable firewalld\n</code></pre><p>4、关闭Selinux</p>\n<pre><code>setenforce  0 #临时禁用selinux\nsed -i &quot;s/^SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/sysconfig/selinux  #永久关闭 修改/etc/sysconfig/selinux文件设置\nsed -i &quot;s/^SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config\n</code></pre><p>5、关闭Swap，否则kubelet会出错！</p>\n<pre><code>swapoff -a #临时关闭swap\nsed -i &apos;s/.*swap.*/#&amp;/&apos; /etc/fstab #永久关闭 注释/etc/fstab文件里swap相关的行\n</code></pre><p>6、配置路由 </p>\n<pre><code>cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\n</code></pre><p>使其立刻生效 </p>\n<pre><code>sysctl --system\n</code></pre><p>或执行</p>\n<pre><code>sysctl -p /etc/sysctl.d/k8s.conf生效\n</code></pre><p>7、安装依赖包配置ntp</p>\n<pre><code>yum install -y epel-release\nyum install -y yum-utils device-mapper-persistent-data lvm2 net-tools conntrack-tools wget vim  ntpdate libseccomp libtool-ltdl\nsystemctl enable ntpdate.service\necho &apos;*/30 * * * * /usr/sbin/ntpdate time7.aliyun.com &gt;/dev/null 2&gt;&amp;1&apos; &gt; /tmp/crontab2.tmp\ncrontab /tmp/crontab2.tmp\nsystemctl start ntpdate.service\n</code></pre><p>8、添加kubernetes的yum源</p>\n<pre><code>cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n</code></pre><p>9、设置内核（可不设置）</p>\n<pre><code>echo &quot;* soft nofile 65536&quot; &gt;&gt; /etc/security/limits.conf\necho &quot;* hard nofile 65536&quot; &gt;&gt; /etc/security/limits.conf\necho &quot;* soft nproc 65536&quot;  &gt;&gt; /etc/security/limits.conf\necho &quot;* hard nproc 65536&quot;  &gt;&gt; /etc/security/limits.conf\necho &quot;* soft  memlock  unlimited&quot;  &gt;&gt; /etc/security/limits.conf\necho &quot;* hard memlock  unlimited&quot;  &gt;&gt; /etc/security/limits.conf\n</code></pre><p>自己写的一个初始化脚本<a href=\"https://github.com/fungitive/Shell-script/blob/master/kubeadm-k8s-config.sh\" target=\"_blank\" rel=\"noopener\">config.sh</a> ，可以提高初始化效率。</p>\n<h3 id=\"二、安装与配置docker\"><a href=\"#二、安装与配置docker\" class=\"headerlink\" title=\"二、安装与配置docker\"></a>二、安装与配置docker</h3><p>1、安装docker<br>参照<a href=\"https://blog.csdn.net/bbwangj/article/details/76040122\" target=\"_blank\" rel=\"noopener\">《Centos7安装Docker最新版》</a><br>2、配置docker镜像下载代理 </p>\n<pre><code>vi /usr/lib/systemd/system/docker.service的ExecStart前加入一行\nEnvironment=&quot;HTTPS_PROXY=http://ik8s.io:10080&quot;\nEnvironment=&quot;NO_PROXY=127.0.0.0/8,172.20.0.0/16&quot;\n</code></pre><p>3、重启docker</p>\n<pre><code>systemctl daemon-reload &amp;&amp; systemctl restart docker\n</code></pre><h3 id=\"三、安装与配置kubeadm-kubelet和kubectl\"><a href=\"#三、安装与配置kubeadm-kubelet和kubectl\" class=\"headerlink\" title=\"三、安装与配置kubeadm, kubelet和kubectl\"></a>三、安装与配置kubeadm, kubelet和kubectl</h3><p>1、安装kubeadm, kubelet和kubectl</p>\n<pre><code>yum install -y kubelet kubeadm kubectl\n</code></pre><p>2、配置kubeadm</p>\n<pre><code>vi /etc/systemd/system/kubelet.service.d/10-kubeadm.conf修改如下\nEnvironment=&quot;KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin&quot;\nsystemctl enable kubelet &amp;&amp; systemctl start kubelet\n</code></pre><p>4: 命令补全</p>\n<pre><code>yum install -y bash-completion\nsource /usr/share/bash-completion/bash_completion\nsource &lt;(kubectl completion bash)\necho &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bashrc\n</code></pre><h3 id=\"四、使用kubeadm初始化master\"><a href=\"#四、使用kubeadm初始化master\" class=\"headerlink\" title=\"四、使用kubeadm初始化master\"></a>四、使用kubeadm初始化master</h3><p>初始化的时候指定一下kubernetes版本，并设置一下pod-network-cidr（后面的flannel会用到）：</p>\n<pre><code>  $ kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n\n[root@master]# kubeadm init --kubernetes-version=v1.11.2 --pod-network-cidr=10.244.0.0/16\n[init] using Kubernetes version: v1.11.2\n[preflight] running pre-flight checks\nI0825 11:41:52.394205    5611 kernel_validator.go:81] Validating kernel version\nI0825 11:41:52.394466    5611 kernel_validator.go:96] Validating kernel config\n[preflight/images] Pulling images required for setting up a Kubernetes cluster\n[preflight/images] This might take a minute or two, depending on the speed of your internet connection\n[preflight/images] You can also perform this action in beforehand using &apos;kubeadm config images pull&apos;\n[kubelet] Writing kubelet environment file with flags to file &quot;/var/lib/kubelet/kubeadm-flags.env&quot;\n[kubelet] Writing kubelet configuration to file &quot;/var/lib/kubelet/config.yaml&quot;\n[preflight] Activating the kubelet service\n[certificates] Generated ca certificate and key.\n[certificates] Generated apiserver certificate and key.\n[certificates] apiserver serving cert is signed for DNS names [master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.0.8]\n[certificates] Generated apiserver-kubelet-client certificate and key.\n[certificates] Generated sa key and public key.\n[certificates] Generated front-proxy-ca certificate and key.\n[certificates] Generated front-proxy-client certificate and key.\n[certificates] Generated etcd/ca certificate and key.\n[certificates] Generated etcd/server certificate and key.\n[certificates] etcd/server serving cert is signed for DNS names [master localhost] and IPs [127.0.0.1 ::1]\n[certificates] Generated etcd/peer certificate and key.\n[certificates] etcd/peer serving cert is signed for DNS names [master localhost] and IPs [192.168.0.8 127.0.0.1 ::1]\n[certificates] Generated etcd/healthcheck-client certificate and key.\n[certificates] Generated apiserver-etcd-client certificate and key.\n[certificates] valid certificates and keys now exist in &quot;/etc/kubernetes/pki&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/admin.conf&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/kubelet.conf&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/controller-manager.conf&quot;\n[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/scheduler.conf&quot;\n[controlplane] wrote Static Pod manifest for component kube-apiserver to &quot;/etc/kubernetes/manifests/kube-apiserver.yaml&quot;\n[controlplane] wrote Static Pod manifest for component kube-controller-manager to &quot;/etc/kubernetes/manifests/kube-controller-manager.yaml&quot;\n[controlplane] wrote Static Pod manifest for component kube-scheduler to &quot;/etc/kubernetes/manifests/kube-scheduler.yaml&quot;\n[etcd] Wrote Static Pod manifest for a local etcd instance to &quot;/etc/kubernetes/manifests/etcd.yaml&quot;\n[init] waiting for the kubelet to boot up the control plane as Static Pods from directory &quot;/etc/kubernetes/manifests&quot;\n[init] this might take a minute or longer if the control plane images have to be pulled\n[apiclient] All control plane components are healthy after 49.502361 seconds\n[uploadconfig] storing the configuration used in ConfigMap &quot;kubeadm-config&quot; in the &quot;kube-system&quot; Namespace\n[kubelet] Creating a ConfigMap &quot;kubelet-config-1.11&quot; in namespace kube-system with the configuration for the kubelets in the cluster\n[markmaster] Marking the node master as master by adding the label &quot;node-role.kubernetes.io/master=&apos;&apos;&quot;\n[markmaster] Marking the node master as master by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n[patchnode] Uploading the CRI Socket information &quot;/var/run/dockershim.sock&quot; to the Node API object &quot;master&quot; as an annotation\n[bootstraptoken] using token: 3resfo.cam2tnjxw0tastur\n[bootstraptoken] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstraptoken] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstraptoken] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstraptoken] creating the &quot;cluster-info&quot; ConfigMap in the &quot;kube-public&quot; namespace\n[addons] Applied essential addon: CoreDNS\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes master has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of machines by running the following on each node\nas root:\n\n  kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n</code></pre><p>设置config</p>\n<pre><code>mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre><p>安装flannel，中间的版本号换为master即为最新版。</p>\n<pre><code>kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml\n</code></pre><p>安装完network之后，你可以通过kubectl get pods –all-namespaces来查看kube-dns是否在running来判断network是否安装成功。</p>\n<h3 id=\"五、将node加入集群\"><a href=\"#五、将node加入集群\" class=\"headerlink\" title=\"五、将node加入集群\"></a>五、将node加入集群</h3><p>1、配置kubelet<br>从master将kubelet文件分别复制到node01、node02</p>\n<pre><code>scp /etc/sysconfig/kubelet node01:/etc/sysconfig/kubelet\nscp /etc/sysconfig/kubelet node02:/etc/sysconfig/kubelet\n</code></pre><p>2、执行 kubeadm join的命令即可：</p>\n<pre><code>kubeadm join 192.168.0.8:6443 --token 3resfo.cam2tnjxw0tastur --discovery-token-ca-cert-hash sha256:4a4f45a3c7344ddfe02af363be293b21237caaf2b1598c31d6e662a18bb76fd9\n</code></pre><h3 id=\"六、测试\"><a href=\"#六、测试\" class=\"headerlink\" title=\"六、测试\"></a>六、测试</h3><pre><code>kubectl get nodes\n</code></pre><p>集群部署成功</p>\n<h3 id=\"七、初始化集群报错及问题解决：\"><a href=\"#七、初始化集群报错及问题解决：\" class=\"headerlink\" title=\"七、初始化集群报错及问题解决：\"></a>七、初始化集群报错及问题解决：</h3><p>问题一：</p>\n<pre><code>[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.\nunable to fetch release information. URL: &quot;https://storage.googleapis.com/kubernetes-release/release/stable-1.7.5.txt&quot; Status: 404 Not Found\n</code></pre><p>解决：</p>\n<pre><code>添加版本信息“--kubernetes-version=v1.7.5”，kubeadm reset，再次执行init\n</code></pre><p>问题二：</p>\n<pre><code>W1205 18:49:21.323220  106548 cni.go:189] Unable to update cni config: No networks found in /etc/cni/net.d\nContainer runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized\n</code></pre><p>解决：<br>修改文件内容： </p>\n<pre><code>/etc/systemd/system/kubelet.service.d/10-kubeadm.conf\nEnvironment=&quot;KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-          dir=/etc/cni/ --cni-bin-dir=/opt/cni/bin&quot;\n</code></pre><p>问题三：</p>\n<pre><code>k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:46: Failed to list *v1.Pod: Get https://192.168.0.8:6443/api/v1/pods?fieldSelector=spec.nodeName%3Dk8s-master&amp;resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\nk8s.io/kubernetes/pkg/kubelet/kubelet.go:400: Failed to list *v1.Service: Get https://192.168.0.8:6443/api/v1/services?resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\nk8s.io/kubernetes/pkg/kubelet/kubelet.go:408: Failed to list *v1.Node: Get https://192.168.0.8:6443/api/v1/nodes?fieldSelector=metadata.name%3Dk8s-master&amp;resourceVersion=0: dial tcp 192.168.0.8:6443: getsockopt: connection refused\nUnable to write event: &apos;Post https://192.168.0.8:6443/api/v1/namespaces/kube-system/events: dial tcp 192.168.0.8:6443: getsockopt: connection refused&apos; (may retry after sleeping)\nFailed to get status for pod &quot;etcd-k8s-master_kube-system(5802ae0664772d031dee332b3c63498e)&quot;: Get https://192.168.0.8:6443/api/v1/namespaces/kube-system/pods/etcd-k8s-master: dial tcp 192.168.0.8:6443: getsockopt: connection refused\n</code></pre><p>解决：打开防火墙</p>\n<pre><code>systemctl start firewalld\n</code></pre><p>添加火墙规则：</p>\n<pre><code>firewall-cmd --zone=public --add-port=80/tcp --permanent\nfirewall-cmd --zone=public --add-port=6443/tcp --permanent\nfirewall-cmd --zone=public --add-port=2379-2380/tcp --permanent\nfirewall-cmd --zone=public --add-port=10250-10255/tcp --permanent\nfirewall-cmd --zone=public --add-port=30000-32767/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-ports\n</code></pre><p>问题四：</p>\n<pre><code>[root@master]# kubectl get node\nUnable to connect to the server: x509: certificate signed by unknown authority (possibly because of &quot;crypto/rsa: verification error&quot; while trying to verify candidate authority certificate &quot;kubernetes&quot;)\n</code></pre><p>解决：</p>\n<pre><code>[root@master]# mv  $HOME/.kube $HOME/.kube.bak\n[root@mster]# mkdir -p $HOME/.kube\n[root@master]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n[root@master]# chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre><h3 id=\"八、安装kubernetes-dashboard\"><a href=\"#八、安装kubernetes-dashboard\" class=\"headerlink\" title=\"八、安装kubernetes-dashboard\"></a>八、安装kubernetes-dashboard</h3><p>1、下载kubernetes-dashboard.yaml</p>\n<pre><code>wget https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml\n</code></pre><p>2、编辑kubernetes-dashboard.yaml<br>  添加type: Nodeport 和nodePort: 30001，将146行的serviceAccountName: kubernetes-dashboard改为serviceAccountName: kubernetes-dashboard-admin<br>kubernetes-dashboard.yaml内容如下：</p>\n<pre><code># Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.8.\n#\n# Example usage: kubectl create -f &lt;this_file&gt;\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role &amp; Role Binding ------------------- #\n\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nrules:\n  # Allow Dashboard to create &apos;kubernetes-dashboard-key-holder&apos; secret.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;secrets&quot;]\n  verbs: [&quot;create&quot;]\n  # Allow Dashboard to create &apos;kubernetes-dashboard-settings&apos; config map.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;configmaps&quot;]\n  verbs: [&quot;create&quot;]\n  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;secrets&quot;]\n  resourceNames: [&quot;kubernetes-dashboard-key-holder&quot;, &quot;kubernetes-dashboard-certs&quot;]\n  verbs: [&quot;get&quot;, &quot;update&quot;, &quot;delete&quot;]\n  # Allow Dashboard to get and update &apos;kubernetes-dashboard-settings&apos; config map.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;configmaps&quot;]\n  resourceNames: [&quot;kubernetes-dashboard-settings&quot;]\n  verbs: [&quot;get&quot;, &quot;update&quot;]\n  # Allow Dashboard to get metrics from heapster.\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;services&quot;]\n  resourceNames: [&quot;heapster&quot;]\n  verbs: [&quot;proxy&quot;]\n- apiGroups: [&quot;&quot;]\n  resources: [&quot;services/proxy&quot;]\n  resourceNames: [&quot;heapster&quot;, &quot;http:heapster:&quot;, &quot;https:heapster:&quot;]\n  verbs: [&quot;get&quot;]\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: kubernetes-dashboard-minimal\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n      - name: kubernetes-dashboard\n        image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3\n        ports:\n        - containerPort: 8443\n          protocol: TCP\n        args:\n          - --auto-generate-certificates\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http://my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n          # Create on-disk volume to store exec logs\n        - mountPath: /tmp\n          name: tmp-volume\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: /\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      - name: tmp-volume\n        emptyDir: {}\n      serviceAccountName: kubernetes-dashboard-admin\n      #不改的话有坑\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 443\n      targetPort: 8443\n      nodePort: 30001\n  selector:\n    k8s-app: kubernetes-dashboard\n</code></pre><p>3、安装dashboard</p>\n<pre><code>kubectl apply -f kubernetes-dashboard.yaml\n</code></pre><p>如果不授予权限就会报错。</p>\n<p>4、授予dashboard账户集群管理权限，新建vi kubernetes-dashboard-admin.rbac.yaml</p>\n<pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-admin\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-dashboard-admin\n  labels:\n    k8s-app: kubernetes-dashboard\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard-admin\n  namespace: kube-system\n</code></pre><p>授予权限</p>\n<pre><code>kubectl apply -f  kubernetes-dashboard-admin.rbac.yaml\n</code></pre><p>6、访问dashboard</p>\n<pre><code>https://192.168.0.10:30001\n</code></pre><p>7、获取token令牌的方式访问<br>获取token</p>\n<pre><code>[root@master ~]# kubectl -n kube-system get secret | grep kubernetes-dashboard-admin|awk &apos;{print &quot;secret/&quot;$1}&apos;|xargs kubectl describe -n kube-system|grep token:|awk -F : &apos;{print $2}&apos;|xargs echo\neyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbi10b2tlbi1qYnRrZyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImYzZTY2NjBhLWE4NTgtMTFlOC1iNTI2LTAwMGMyOWU2ZTA4MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiJ9.CcgvvsCEkwKi0nhq-cnm-rDmLiBSclnK3H3cTugUpawvS2ruBl05jVpwPyh3pNc4Z_V5GPelTa7tsVJHDQ2uG1P7HYqKkcvtFnua9y5DAFMqtOf-sxiHSDjIkphXDKCxRVaGXQzv9bTC-MAT0NnJzK08w8lZlITWDuT_GQQHcczCOVknFnwVFDEzQKR0DLc9Bx2Gw-5TINidjhVHIWmUMhfEZE5F1D_kvBHRS6bgE43h0OsoPqs3BeCzxRTCbdbeDb9wIVcBxoi9QF9pE5k5dyuNOylRP2SLiHrK8nuCZSESZkRSDkC_3M2ax_2yfnBGi1cwH1A4JAgcMr7iIIBKAg\n</code></pre><p>将令牌复制登录即可</p>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjlj9djpx0004wnpejofc4n84","category_id":"cjlj9djq70008wnpeisxtujh9","_id":"cjlj9djr9000gwnpeh6sswo5w"},{"post_id":"cjlj9djq40007wnped9u46dy6","category_id":"cjlj9djr5000dwnpe7jnakfm8","_id":"cjlj9djrd000kwnpeweiv1rpa"},{"post_id":"cjlj9djq80009wnpeg0oa4lf2","category_id":"cjlj9djr5000dwnpe7jnakfm8","_id":"cjlj9djre000mwnpe8ipoyijh"},{"post_id":"cjlj9dkca000nwnpe6392ua13","category_id":"cjlj9djr5000dwnpe7jnakfm8","_id":"cjlj9dkcg000pwnpexn1ee3kz"}],"PostTag":[{"post_id":"cjlj9djps0002wnpeyp10vgwk","tag_id":"cjlj9djq00006wnpe5769emyq","_id":"cjlj9djr5000cwnpe6tqm4lpn"},{"post_id":"cjlj9djpx0004wnpejofc4n84","tag_id":"cjlj9djq00006wnpe5769emyq","_id":"cjlj9djr9000fwnpejcu24s7f"},{"post_id":"cjlj9djq40007wnped9u46dy6","tag_id":"cjlj9djr8000ewnpen9qk8a9v","_id":"cjlj9djrc000jwnpecblkfikh"},{"post_id":"cjlj9djq80009wnpeg0oa4lf2","tag_id":"cjlj9djr8000ewnpen9qk8a9v","_id":"cjlj9djre000lwnpedpjz1pf1"},{"post_id":"cjlj9dkca000nwnpe6392ua13","tag_id":"cjlj9dkcf000ownpe23lrav0a","_id":"cjlj9dkch000qwnpekogry4wz"}],"Tag":[{"name":"python","_id":"cjlj9djq00006wnpe5769emyq"},{"name":"docker","_id":"cjlj9djr8000ewnpen9qk8a9v"},{"name":"kubernetes","_id":"cjlj9dkcf000ownpe23lrav0a"}]}}